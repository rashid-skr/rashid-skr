<?xml version="1.0" encoding="UTF-8"?>
<Properties>
<Property key="t24.template.system.I_DataTypes.v5" value="t24.template.system.I_DataTypes.v5&lt;&lt;NR&gt;&gt;I_DataTypes&lt;&lt;NR&gt;&gt;&#x0D;&#x0A;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;* --------------------&#x0D;&#x0A;*  EN_10003543&#x0D;&#x0A;*  Creation.&#x0D;&#x0A;*&#x0D;&#x0A;* 24/01/08 - BG_100016792&#x0D;&#x0A;*            New data type introduced for wider text box.&#x0D;&#x0A;*&#x0D;&#x0A;* 27/08/08 - EN_10003800 (SAR-2008-07-31-0002)&#x0D;&#x0A;*            New datatype T24.INTERNAL.ACCOUNT added&#x0D;&#x0A;*            Field_AllowNegative added&#x0D;&#x0A;*----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;    EQU T24_String TO &apos;T24.STRING&apos;&#x0D;&#x0A;    EQU T24_BigString TO &apos;T24.BIG.STRING&apos;&#x0D;&#x0A;    EQU T24_Text TO &apos;T24.TEXT&apos;&#x0D;&#x0A;    EQU T24_TextWide TO &apos;T24.TEXT.WIDE&apos;&#x0D;&#x0A;    EQU T24_Numeric TO &apos;T24.NUMERIC&apos;&#x0D;&#x0A;    EQU T24_Date TO &apos;T24.DATE&apos;&#x0D;&#x0A;    EQU T24_Portfolio TO &apos;T24.PORTFOLIO&apos;&#x0D;&#x0A;    EQU T24_Account TO &apos;T24.ACCOUNT&apos;&#x0D;&#x0A;    EQU T24_InternalAccount TO &apos;T24.INTERNAL.ACCOUNT&apos;&#x0D;&#x0A;    EQU T24_Customer TO &apos;T24.CUSTOMER&apos;&#x0D;&#x0A;    EQU T24_Frequency TO &apos;T24.FREQUENCY&apos;&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    EQU Field_Mandatory TO &apos;,mandatory&apos;&#x0D;&#x0A;    EQU Field_NoInput TO &apos;,NOINPUT&apos;&#x0D;&#x0A;    EQU Field_NoChange TO &apos;,NOCHANGE&apos;&#x0D;&#x0A;    EQU Field_Unique TO &apos;,UNIQUE&apos;&#x0D;&#x0A;    EQU Field_NoNulls TO &apos;,NONULLS&apos;&#x0D;&#x0A;    EQU Field_AllowNegative TO &apos;,ALLOW.NEGATIVE&apos;&#x0D;&#x0A;&#x0D;&#x0A;    COMMON/DataTypeCommon/DataType.list,&#x0D;&#x0A;    DataType.nArrays,&#x0D;&#x0A;    DataType.tArrays,&#x0D;&#x0A;    DataType.checkFiles&#x0D;&#x0A; &#x0D;&#x0A;"/>
<Property key="t24.template.system.TEMPLATE.VALIDATE.v5" value="t24.template.system.TEMPLATE.VALIDATE.v5&lt;&lt;NR&gt;&gt;TEMPLATE.VALIDATE&lt;&lt;NR&gt;&gt;* Version 2 02/06/00  GLOBUS Release No. G11.0.00 29/06/00&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.VALIDATE&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;!** Template FOR validation routines&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype validator&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;*!&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Modification History&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* 07/06/06 - BG_100011433&#x0D;&#x0A;*            Creation&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*** &lt;region name= Main section&gt;&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;&#x0D;&#x0A;    GOSUB INITIALISE&#x0D;&#x0A;    GOSUB PROCESS.MESSAGE&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;VALIDATE:&#x0D;&#x0A;* TODO - Add the validation code here.&#x0D;&#x0A;* Set AF, AV and AS to the field, multi value and sub value and invoke STORE.END.ERROR&#x0D;&#x0A;* Set ETEXT to point to the EB.ERROR.TABLE&#x0D;&#x0A;&#x0D;&#x0A;*      AF = MY.FIELD.NAME                 &lt;== Name of the field&#x0D;&#x0A;*      ETEXT = &apos;EB-EXAMPLE.ERROR.CODE&apos;    &lt;== The error code&#x0D;&#x0A;*      CALL STORE.END.ERROR               &lt;== Needs to be invoked per error&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Initialise&gt;&#x0D;&#x0A;INITIALISE:&#x0D;&#x0A;***&#x0D;&#x0A;&#x0D;&#x0A;*&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Process Message&gt;&#x0D;&#x0A;PROCESS.MESSAGE:&#x0D;&#x0A;    BEGIN CASE&#x0D;&#x0A;    CASE MESSAGE EQ &apos;&apos;        ;* Only during commit...&#x0D;&#x0A;        BEGIN CASE&#x0D;&#x0A;        CASE V$FUNCTION EQ &apos;D&apos;&#x0D;&#x0A;            GOSUB VALIDATE.DELETE&#x0D;&#x0A;        CASE V$FUNCTION EQ &apos;R&apos;&#x0D;&#x0A;            GOSUB VALIDATE.REVERSE&#x0D;&#x0A;        CASE OTHERWISE        ;* The real VALIDATE...&#x0D;&#x0A;            GOSUB VALIDATE&#x0D;&#x0A;        END CASE&#x0D;&#x0A;    CASE MESSAGE EQ &apos;AUT&apos; OR MESSAGE EQ &apos;VER&apos;     ;* During authorisation and verification...&#x0D;&#x0A;        GOSUB VALIDATE.AUTHORISATION&#x0D;&#x0A;    END CASE&#x0D;&#x0A;*&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= VALIDATE.DELETE&gt;&#x0D;&#x0A;VALIDATE.DELETE:&#x0D;&#x0A;* Any special checks for deletion&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= VALIDATE.REVERSE&gt;&#x0D;&#x0A;VALIDATE.REVERSE:&#x0D;&#x0A;* Any special checks for reversal&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= VALIDATE.AUTHORISATION&gt;&#x0D;&#x0A;VALIDATE.AUTHORISATION:&#x0D;&#x0A;* Any special checks for authorisation&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.key.record.separator" value="&lt;&lt;NR&gt;&gt;"/>
<Property key="t24.template.system.TEMPLATE.SUBROUTINE.v5" value="t24.template.system.TEMPLATE.SUBROUTINE.v5&lt;&lt;NR&gt;&gt;TEMPLATE.SUBROUTINE&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-20&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.SUBROUTINE&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;!** Simple SUBROUTINE template&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype subroutine&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;*!&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      GOSUB INITIALISE&#x0D;&#x0A;      GOSUB PROCESS&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;PROCESS:&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;INITIALISE:&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.addDeliveryReferenceField.v5" value="t24.template.system.Table.addDeliveryReferenceField.v5&lt;&lt;NR&gt;&gt;Table.addDeliveryReferenceField&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;Rating&gt;-10&lt;/Rating&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addDeliveryReferenceField(neighbour) &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;doc&gt; &#x0D;&#x0A;* Adds a standard delivery reference field to the application.&#x0D;&#x0A; * @param neighbour  Reserved for future use. &#x0D;&#x0A;* @author tcoleman@temenos.com &#x0D;&#x0A;* @public Application Development &#x0D;&#x0A;* @component Contract &#x0D;&#x0A;* &lt;/doc&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; $INSERT I_COMMON &#x0D;&#x0A;$INSERT I_EQUATE &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;  &#x0D;&#x0A;   GOSUB setFieldType&#x0D;&#x0A;          &#x0D;&#x0A;   CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;     &#x0D;&#x0A;   RETURN&#x0D;&#x0A;  &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; setFieldType: &#x0D;&#x0A;   fieldName = &quot;XX.DELIVERY.REF&quot;&#x0D;&#x0A;    nArrayItem = &quot;35&quot; &#x0D;&#x0A;   tArrayItem = &quot;&quot; &#x0D;&#x0A;   tArrayItem&lt;3&gt; = &apos;NOINPUT&apos;&#x0D;&#x0A;    neighbour = &quot;&quot; &#x0D;&#x0A;    &#x0D;&#x0A;   RETURN&#x0D;&#x0A;"/>
<Property key="t24.unittest.template" value="*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;TESTFILENAME&gt;&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*&lt;doc&gt;&#x0D;&#x0A;*&lt;desc&gt;Enter description here &lt;/desc&gt;&#x0D;&#x0A;*@public&#x0D;&#x0A;*@link subroutineName&#x0D;&#x0A;*@author youremail@temenos.com&#x0D;&#x0A;*&lt;/doc&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= Inserts&gt;&#x0D;&#x0A;*** &lt;desc&gt;Insert files &lt;/desc&gt;&#x0D;&#x0A;&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= Process&gt;&#x0D;&#x0A;*** &lt;desc&gt;Processing &lt;/desc&gt;&#x0D;&#x0A;&#x0D;&#x0A;    GOSUB initialise&#x0D;&#x0A;    GOSUB executeTestCases&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A; &#x0D;&#x0A;*** &lt;region name= initialise&gt;&#x0D;&#x0A;    initialise:&#x0D;&#x0A;*** &lt;desc&gt; &lt;/desc&gt;&#x0D;&#x0A;** TODO Initialisation&#x0D;&#x0A;&#x0D;&#x0A;    tResult = &apos;&apos;&#x0D;&#x0A;    tErrorMessage = &apos;&apos;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= executeTestCases&gt;&#x0D;&#x0A;    executeTestCases:&#x0D;&#x0A;*** &lt;desc&gt; &lt;/desc&gt;&#x0D;&#x0A; &#x0D;&#x0A;    GOSUB testCase1&#x0D;&#x0A;    GOSUB testCase2&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= testCase1&gt;&#x0D;&#x0A;    testCase1:&#x0D;&#x0A;*** &lt;desc&gt; &lt;/desc&gt;&#x0D;&#x0A;** TODO Initialise expected results&#x0D;&#x0A;** TODO Invoke the suboutine/function under test here with proper arguments&#x0D;&#x0A;** TODO Compare the results&#x0D;&#x0A;** TODO load tResult and tErrorMessage variables&#x0D;&#x0A;&#x0D;&#x0A;    tResult = &apos;passed&apos; ;* Example&#x0D;&#x0A;&#x0D;&#x0A;** Build report&#x0D;&#x0A;&#x0D;&#x0A;    CALL T24UNIT.BUILD.REPORT(tResult,tErrorMessage)&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= testCase2&gt;&#x0D;&#x0A;    testCase2:&#x0D;&#x0A;*** &lt;desc&gt; &lt;/desc&gt;&#x0D;&#x0A;** TODO Initialise expected results&#x0D;&#x0A;** TODO Invoke the suboutine/function under test here with proper arguments&#x0D;&#x0A;** TODO Compare the results&#x0D;&#x0A;** TODO load tResult and tErrorMessage variables&#x0D;&#x0A;&#x0D;&#x0A;    tResult = &apos;failed&apos; ;* Example&#x0D;&#x0A;    tErrorMessage = &apos;Not yet implemented&apos; ;* Example&#x0D;&#x0A;&#x0D;&#x0A;** Build report&#x0D;&#x0A;&#x0D;&#x0A;    CALL T24UNIT.BUILD.REPORT(tResult,tErrorMessage)&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;END&#x0D;&#x0A;&#x0D;&#x0A;"/>
<Property key="t24.template.system.TEMPLATE.FIELDS.v5" value="t24.template.system.TEMPLATE.FIELDS.v5&lt;&lt;NR&gt;&gt;TEMPLATE.FIELDS&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-7&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.FIELDS&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*&lt;doc&gt;&#x0D;&#x0A;* Template for field definitions routine &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.FIELDS&#x0D;&#x0A;*&#x0D;&#x0A;* @author tcoleman@temenos.com&#x0D;&#x0A;* @stereotype fields template&#x0D;&#x0A;* @uses Table&#x0D;&#x0A;* @public Table Creation&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;* &lt;/doc&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History :&#x0D;&#x0A;*&#x0D;&#x0A;* 19/10/07 - EN_10003543&#x0D;&#x0A;*            New Template changes&#x0D;&#x0A;*&#x0D;&#x0A;* 14/11/07 - BG_100015736&#x0D;&#x0A;*            Exclude routines that are not released&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Header&gt;&#x0D;&#x0A;*** &lt;desc&gt;Inserts and control logic&lt;/desc&gt;&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;    $INSERT I_DataTypes&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    CALL Table.defineId(&quot;TABLE.NAME.ID&quot;, T24_String) ;* Define Table id&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    CALL Table.addField(fieldName, fieldType, args, neighbour) ;* Add a new fields&#x0D;&#x0A;    CALL Field.setCheckFile(fileName)        ;* Use DEFAULT.ENRICH from SS or just field 1&#x0D;&#x0A;    CALL Table.addFieldDefinition(fieldName, fieldLength, fieldType, neighbour) ;* Add a new field&#x0D;&#x0A;    CALL Table.addFieldWithEbLookup(fieldName,virtualTableName,neighbour) ;* Specify Lookup values&#x0D;&#x0A;    CALL Field.setDefault(defaultValue) ;* Assign default value&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    CALL Table.setAuditPosition ;* Poputale audit information&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="local.user.login" value=""/>
<Property key="t24.object.template" value="*&lt;doc&gt;&lt;&lt;OBJ_DESCRIPTION&gt;&gt;&#x0D;&#x0A;*@public&#x0D;&#x0A;&lt;&lt;OBJ_LINK&gt;&gt;&#x0D;&#x0A;&lt;&lt;OBJ_PACKAGE&gt;&gt;&#x0D;&#x0A;&lt;&lt;OBJ_AUTHOR&gt;&gt;&#x0D;&#x0A;*&lt;/doc&gt;&#x0D;&#x0A;&lt;&lt;OBJ_DEFFUN&gt;&gt;&#x0D;&#x0A;"/>
<Property key="t24.remote.server.second.browse.pattern" value=""/>
<Property key="t24.template.system.XX.EOD.SELECT.v5" value="t24.template.system.XX.EOD.SELECT.v5&lt;&lt;NR&gt;&gt;XX.EOD.SELECT&lt;&lt;NR&gt;&gt;* Version 1 13/04/00  GLOBUS Release No. 200508 30/06/05&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-6&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.EOD.SELECT&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Select routine to setup the common area for the multi-threaded Close of Business&#x0D;&#x0A;* job &lt;&lt;PREFIX&gt;&gt;.EOD&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;$INSERT I_BATCH.FILES&#x0D;&#x0A;$INSERT I_&lt;&lt;PREFIX&gt;&gt;.EOD.COMMON&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Setup the parameters for BATCH.BUILD.LIST&#x0D;&#x0A;* LIST.PARAMETERS&lt;1&gt; = blank, this is the list file name, NEVER enter a value here&#x0D;&#x0A;* LIST.PARAMETERS&lt;2&gt; = the filename to be selected, e.g. F.ACCOUNT, BATCH.BUILD.LIST will open it&#x0D;&#x0A;* LIST.PARAMETERS&lt;3&gt; = selection criteria for file, e.g. CURRENCY EQ &quot;GBP&quot;, this first WITH is not required&#x0D;&#x0A;*                      and will be added by BATCH.BUILD.LIST&#x0D;&#x0A;* ID.LIST = predefined list, for example from a CONCAT file record.&#x0D;&#x0A;*           ID.LIST will take precedence over LIST.PARAMETERS&#x0D;&#x0A;* CONTROL.LIST = common list used by BATCH.JOB.CONTROL&#x0D;&#x0A;&#x0D;&#x0A;      IF CONTROL.LIST = &apos;&apos; THEN&#x0D;&#x0A;*        Set any values for CONTROL.LIST here, this is not mandatory.&#x0D;&#x0A;*        This can be used when the select routine must be called repeatedly&#x0D;&#x0A;*        for example&#x0D;&#x0A;*        CONTROL.LIST = TODAY:@FM:NEXT.WORKING.DAY&#x0D;&#x0A;      END&#x0D;&#x0A;&#x0D;&#x0A;      LIST.PARAMETERS = &apos;&apos; ; ID.LIST = &apos;&apos;&#x0D;&#x0A;&#x0D;&#x0A;*     LIST.PARAMETERS&lt;2&gt; = &apos;F.SEC.TRADE&apos;&#x0D;&#x0A;*     LIST.PARAMETERS&lt;3&gt; = &apos;TRADE.CCY EQ &quot;USD&quot;&apos;&#x0D;&#x0A;&#x0D;&#x0A;      CALL BATCH.BUILD.LIST(LIST.PARAMETERS,ID.LIST)&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
<Property key="t24.template.system.XX.SUBROUTINE.v5" value="t24.template.system.XX.SUBROUTINE.v5&lt;&lt;NR&gt;&gt;XX.SUBROUTINE&lt;&lt;NR&gt;&gt;* Version 3 02/06/00  GLOBUS Release No. 200508 30/06/05&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-10&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.SUBROUTINE&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History :&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;      GOSUB INITIALISE&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*&#x0D;&#x0A;&#x0D;&#x0A;INITIALISE:&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
<Property key="t24.template.system.TEMPLATE.OVERRIDE.v5" value="t24.template.system.TEMPLATE.OVERRIDE.v5&lt;&lt;NR&gt;&gt;TEMPLATE.OVERRIDE&lt;&lt;NR&gt;&gt;* Version 3 15/11/00  GLOBUS Release No. 200508 30/06/05&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;51&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.OVERRIDE&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;!** Template FOR override routines&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype validator&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;*!&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Modification History&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Main section&gt;&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;      GOSUB INITIALISE&#x0D;&#x0A;      GOSUB OVERRIDES&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;OVERRIDES:&#x0D;&#x0A;* TODO Add your override here&#x0D;&#x0A;* Set TEXT to be the key to the override you want to use form the OVERRIDE table&#x0D;&#x0A;* Set AF/AV/AS to be the field that is relevant to the override.&#x0D;&#x0A;*&#x0D;&#x0A;* AF = &lt;&lt;PREFIX&gt;&gt;.RETURN.FIELD&#x0D;&#x0A;* TEXT = &quot;SAMPLE.OVERRIDE.KEY&quot;&#x0D;&#x0A;* GOSUB DO.OVERRIDE&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Add an override&gt;&#x0D;&#x0A;*** &#x0D;&#x0A;DO.OVERRIDE:&#x0D;&#x0A;      CALL STORE.OVERRIDE(CURR.NO)&#x0D;&#x0A;      IF TEXT = &apos;NO&apos; THEN&#x0D;&#x0A;         GOTO EXIT.SUB&#x0D;&#x0A;      END&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Initialise&gt;&#x0D;&#x0A;*** &#x0D;&#x0A;INITIALISE:&#x0D;&#x0A;      CURR.NO = 0&#x0D;&#x0A;      CALL STORE.OVERRIDE(CURR.NO)&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Exit&gt;&#x0D;&#x0A;*** &#x0D;&#x0A;EXIT.SUB:&#x0D;&#x0A;      RETURN TO EXIT.SUB&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;*&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
<Property key="local.user.rememberlogin.flag" value="false"/>
<Property key="t24.template.system.Table.setTriggerField.v5" value="t24.template.system.Table.setTriggerField.v5&lt;&lt;NR&gt;&gt;Table.setTriggerField&lt;&lt;NR&gt;&gt; *-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;0&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;   SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.setTriggerField(field, inputs, noinputs) &#x0D;&#x0A;* &lt;doc&gt; &#x0D;&#x0A;* Designates a specifc field as a triger field, e.g. OPERATION&#x0D;&#x0A; * Only one trigger field may be defined per Table. &#x0D;&#x0A;* @param field The field number to set as a trigger field.&#x0D;&#x0A; * @param inputs The list of fields that will be made inputtable&#x0D;&#x0A; * @param noinputs The list of fields that will be made noinput &#x0D;&#x0A;* @link Table &#x0D;&#x0A;* @author tcoleman@temenos.com&#x0D;&#x0A;* @public Application Development&#x0D;&#x0A;* @component Contract &#x0D;&#x0A;* @uses E &#x0D;&#x0A;* @uses ETEXT &#x0D;&#x0A;* &lt;/doc&gt; &#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A; $INSERT I_EQUATE &#x0D;&#x0A;$INSERT I_Table &#x0D;&#x0A;   Table.triggerField = field&#x0D;&#x0A;    Table.noInputFields = noinputs&#x0D;&#x0A;    Table.inputtableFields = inputs &#x0D;&#x0A;   RETURN &#x0D;&#x0A;"/>
<Property key="t24.template.system.Field.setCheckFile.v5" value="t24.template.system.Field.setCheckFile.v5&lt;&lt;NR&gt;&gt;Field.setCheckFile&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;0&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.Field.setCheckFile(tableName)&#x0D;&#x0A;*&#x0D;&#x0A;* Turn tableName into a checkfile argument using the default&#x0D;&#x0A;* enrichment field set on standard selection&#x0D;&#x0A;*&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* 10/08/07 - EN_10003538&#x0D;&#x0A;*            Creation&#x0D;&#x0A;*&#x0D;&#x0A;* 03/12/07 - BG_100015805&#x0D;&#x0A;*            Enrichment doesn&apos;t appear when Default enrichment is blank&#x0D;&#x0A;*&#x0D;&#x0A;* 27/08/08 - EN_10003800 (SAR-2008-07-31-0002)&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;    $INSERT I_Table&#x0D;&#x0A;    $INSERT I_F.STANDARD.SELECTION&#x0D;&#x0A;&#x0D;&#x0A;    rStandardSelection = &apos;&apos;&#x0D;&#x0A;    CALL GET.STANDARD.SELECTION.DETS(tableName, rStandardSelection)&#x0D;&#x0A;    enrichFieldName = rStandardSelection&lt;SSL.DEFAULT.ENRICH&gt;&#x0D;&#x0A;    enrichmentField = 0&#x0D;&#x0A;    LOCATE enrichFieldName IN rStandardSelection&lt;SSL.SYS.FIELD.NAME,1&gt; SETTING pos THEN&#x0D;&#x0A;        enrichmentField = rStandardSelection&lt;SSL.SYS.FIELD.NO,pos&gt;&#x0D;&#x0A;    END&#x0D;&#x0A;    IF NOT(enrichmentField) THEN&#x0D;&#x0A;        enrichmentField = 1&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    checkFileitem = tableName&#x0D;&#x0A;&#x0D;&#x0A;    CHECKFILE(Table.currentFieldPosition) = checkFileitem : FM : enrichmentField&#x0D;&#x0A;    RETURN&#x0D;&#x0A;"/>
<Property key="t24.server.view.remote.server.directory" value="GLOBUS.BP"/>
<Property key="t24.template.system.XX.ACCOUNTING.v5" value="t24.template.system.XX.ACCOUNTING.v5&lt;&lt;NR&gt;&gt;XX.ACCOUNTING&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-158&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Version 2 29/09/00  GLOBUS Release No. 200508 30/06/05&#x0D;&#x0A;*&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.ACCOUNTING&#x0D;&#x0A;*&#x0D;&#x0A;************************************************************************&#x0D;&#x0A;*  Insert files.&#x0D;&#x0A;******************&#x0D;&#x0A;*&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;$INSERT I_F.ACCOUNT&#x0D;&#x0A;$INSERT I_F.DATES&#x0D;&#x0A;$INSERT I_F.STMT.ENTRY&#x0D;&#x0A;*&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*&#x0D;&#x0A;      GOSUB INITIALISATION&#x0D;&#x0A;*&#x0D;&#x0A;      GOSUB PRODUCE.ENTRIES&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN                             ; * main return&#x0D;&#x0A;*&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*                                                                       *&#x0D;&#x0A;*  Local subroutines.                                                   *&#x0D;&#x0A;*                                                                       *&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*&#x0D;&#x0A;****************&#x0D;&#x0A;PRODUCE.ENTRIES:&#x0D;&#x0A;****************&#x0D;&#x0A;*&#x0D;&#x0A;* Set the corresponding variabls here,&#x0D;&#x0A;* then a call to the specific item...&#x0D;&#x0A;*&#x0D;&#x0A;!!&gt;Set entries here&#x0D;&#x0A;*&#x0D;&#x0A;* These are an example ONLY!&#x0D;&#x0A;*&#x0D;&#x0A;&#x0D;&#x0A;      LCY.AMOUNT = 100&#x0D;&#x0A;      FCY.AMOUNT = &apos;&apos;&#x0D;&#x0A;      EXCH.RATE = &apos;&apos;&#x0D;&#x0A;      ACCOUNT.NO = &apos;123456&apos;&#x0D;&#x0A;      GOSUB RAISE.AC.ENTRY&#x0D;&#x0A;&#x0D;&#x0A;      GOSUB REVERSE.AMOUNTS&#x0D;&#x0A;      PL.CATEGORY = 50000&#x0D;&#x0A;      GOSUB RAISE.CATEG.ENTRY&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;***************&#x0D;&#x0A;INITIALISATION:&#x0D;&#x0A;***************&#x0D;&#x0A;*&#x0D;&#x0A;*  Open files.&#x0D;&#x0A;*&#x0D;&#x0A;      IF VALUE.DATE = &quot;&quot; THEN&#x0D;&#x0A;         VALUE.DATE = TODAY&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;*  Set process date. HERE&#x0D;&#x0A;*&#x0D;&#x0A;!!&gt;Define process date&#x0D;&#x0A;&#x0D;&#x0A;      IF PROCESS.DATE = &quot;&quot; THEN&#x0D;&#x0A;         PROCESS.DATE = TODAY&#x0D;&#x0A;      END&#x0D;&#x0A;&#x0D;&#x0A;!!&gt;Set Deal currency&#x0D;&#x0A;      DEAL.CURRENCY = &quot;&quot;&#x0D;&#x0A;*&#x0D;&#x0A;      REVERSAL = 0&#x0D;&#x0A;      FORWARD.ENTRY = 0&#x0D;&#x0A;&#x0D;&#x0A;      IF PROCESS.DATE &gt; R.DATES(EB.DAT.PERIOD.END) THEN&#x0D;&#x0A;         FORWARD.ENTRY = 1&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      MULTI.ENTRIES = &apos;&apos;&#x0D;&#x0A;      MULTI.FORWARD.ENTRIES = &apos;&apos;&#x0D;&#x0A;*&#x0D;&#x0A;      AMOUNT = &apos;&apos;&#x0D;&#x0A;      CRF.TYPE = &apos;&apos;&#x0D;&#x0A;      CRF.TXN.CODE = &apos;&apos;&#x0D;&#x0A;      CRF.MAT.DATE = &apos;&apos;&#x0D;&#x0A;      RETURN                             ; * to main&#x0D;&#x0A;*&#x0D;&#x0A;****************&#x0D;&#x0A;RAISE.AC.ENTRY:&#x0D;&#x0A;****************&#x0D;&#x0A;*&#x0D;&#x0A;      GOSUB BUILD.BASE.ENTRY&#x0D;&#x0A;*&#x0D;&#x0A;      ENTRY&lt;AC.STE.AMOUNT.LCY&gt; = LCY.AMOUNT&#x0D;&#x0A;      ENTRY&lt;AC.STE.AMOUNT.FCY&gt; = FCY.AMOUNT&#x0D;&#x0A;      ENTRY&lt;AC.STE.EXCHANGE.RATE&gt; = EXCH.RATE&#x0D;&#x0A;      ENTRY&lt;AC.STE.ACCOUNT.NUMBER&gt; = ACCOUNT.NO&#x0D;&#x0A;*&#x0D;&#x0A;      GOSUB APPEND.ENTRIES&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;****************&#x0D;&#x0A;RAISE.CRF.ENTRY:&#x0D;&#x0A;****************&#x0D;&#x0A;*&#x0D;&#x0A;      GOSUB BUILD.BASE.ENTRY&#x0D;&#x0A;*&#x0D;&#x0A;      ENTRY&lt;AC.STE.AMOUNT.LCY&gt; = LCY.AMOUNT&#x0D;&#x0A;      ENTRY&lt;AC.STE.AMOUNT.FCY&gt; = FCY.AMOUNT&#x0D;&#x0A;      ENTRY&lt;AC.STE.EXCHANGE.RATE&gt; = EXCH.RATE&#x0D;&#x0A;      ENTRY&lt;AC.STE.CRF.TYPE&gt; = CRF.TYPE&#x0D;&#x0A;      ENTRY&lt;AC.STE.CRF.TXN.CODE&gt; = CRF.TXN.CODE&#x0D;&#x0A;      ENTRY&lt;AC.STE.CRF.MAT.DATE&gt; =CRF.MAT.DATE&#x0D;&#x0A;*&#x0D;&#x0A;      GOSUB APPEND.ENTRIES&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*&#x0D;&#x0A;******************&#x0D;&#x0A;RAISE.CATEG.ENTRY:&#x0D;&#x0A;******************&#x0D;&#x0A;*&#x0D;&#x0A;*  Only live categ.entry&#x0D;&#x0A;*&#x0D;&#x0A;      GOSUB BUILD.BASE.ENTRY&#x0D;&#x0A;*&#x0D;&#x0A;      ENTRY&lt;AC.STE.AMOUNT.LCY&gt; = LCY.AMOUNT&#x0D;&#x0A;      ENTRY&lt;AC.STE.PL.CATEGORY&gt; = PL.CATEGORY&#x0D;&#x0A;      ENTRY&lt;AC.STE.AMOUNT.FCY&gt; = FCY.AMOUNT&#x0D;&#x0A;      ENTRY&lt;AC.STE.EXCHANGE.RATE&gt; = EXCH.RATE&#x0D;&#x0A;*&#x0D;&#x0A;      GOSUB APPEND.LIVE.ENTRIES&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;***************&#x0D;&#x0A;APPEND.ENTRIES:&#x0D;&#x0A;***************&#x0D;&#x0A;*&#x0D;&#x0A;      IF FORWARD.ENTRY THEN&#x0D;&#x0A;         GOSUB APPEND.FORWARD.ENTRIES&#x0D;&#x0A;      END ELSE&#x0D;&#x0A;         GOSUB APPEND.LIVE.ENTRIES&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*&#x0D;&#x0A;********************&#x0D;&#x0A;APPEND.LIVE.ENTRIES:&#x0D;&#x0A;***********************************************************&#x0D;&#x0A;*  Append accounting and crf entries to an array of       *&#x0D;&#x0A;*  entries.&#x0D;&#x0A;*  If REVERSAL is set then reverse the sign of the Local  *&#x0D;&#x0A;*  and Foreign CCY amounts.                               *&#x0D;&#x0A;***********************************************************&#x0D;&#x0A;*&#x0D;&#x0A;      IF REVERSAL THEN&#x0D;&#x0A;         ENTRY&lt;AC.STE.AMOUNT.LCY&gt; = -ENTRY&lt;AC.STE.AMOUNT.LCY&gt;&#x0D;&#x0A;         IF ENTRY&lt;AC.STE.AMOUNT.FCY&gt; THEN&#x0D;&#x0A;            ENTRY&lt;AC.STE.AMOUNT.FCY&gt; = -ENTRY&lt;AC.STE.AMOUNT.FCY&gt;&#x0D;&#x0A;         END&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      MULTI.ENTRIES&lt;-1&gt; = LOWER(ENTRY)&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*&#x0D;&#x0A;***********************&#x0D;&#x0A;APPEND.FORWARD.ENTRIES:&#x0D;&#x0A;***********************&#x0D;&#x0A;*&#x0D;&#x0A;***********************************************************&#x0D;&#x0A;*  Append forward entries to an array of entries          *&#x0D;&#x0A;*  If REVERSAL is set then reverse the sign of the Local  *&#x0D;&#x0A;*  and Foreign CCY amounts.                               *&#x0D;&#x0A;***********************************************************&#x0D;&#x0A;*&#x0D;&#x0A;      IF REVERSAL THEN&#x0D;&#x0A;         ENTRY&lt;AC.STE.AMOUNT.LCY&gt; = -ENTRY&lt;AC.STE.AMOUNT.LCY&gt;&#x0D;&#x0A;         IF ENTRY&lt;AC.STE.AMOUNT.FCY&gt; THEN&#x0D;&#x0A;            ENTRY&lt;AC.STE.AMOUNT.FCY&gt; = -ENTRY&lt;AC.STE.AMOUNT.FCY&gt;&#x0D;&#x0A;         END&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      MULTI.FORWARD.ENTRIES&lt;-1&gt; = LOWER(ENTRY)&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;DETERMINE.CCY.AMOUNTS:&#x0D;&#x0A;**********************&#x0D;&#x0A;*&#x0D;&#x0A;*  Foreign CCY / Local CCY Conversion.&#x0D;&#x0A;*&#x0D;&#x0A;      IF DEAL.CCY = LCCY THEN&#x0D;&#x0A;         LCY.AMOUNT = AMOUNT&#x0D;&#x0A;         FCY.AMOUNT = &quot;&quot;&#x0D;&#x0A;      END ELSE&#x0D;&#x0A;         FCY.AMOUNT = AMOUNT&#x0D;&#x0A;         CALL MIDDLE.RATE.CONV.CHECK(FCY.AMOUNT,DEAL.CCY,EXCH.RATE,&quot;1&quot;,LCY.AMOUNT,&quot;&quot;,&quot;&quot;)&#x0D;&#x0A;         CALL EB.ROUND.AMOUNT(LCCY,LCY.AMOUNT,&quot;&quot;,&quot;&quot;)&#x0D;&#x0A;      END&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*&#x0D;&#x0A;****************&#x0D;&#x0A;REVERSE.AMOUNTS:&#x0D;&#x0A;****************&#x0D;&#x0A;*&#x0D;&#x0A;*  Revese signs of lcy.amount and fcy.amount&#x0D;&#x0A;*&#x0D;&#x0A;      LCY.AMOUNT = -LCY.AMOUNT&#x0D;&#x0A;      IF FCY.AMOUNT THEN&#x0D;&#x0A;         FCY.AMOUNT = -FCY.AMOUNT&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*&#x0D;&#x0A;**************&#x0D;&#x0A;RESET.AMOUNTS:&#x0D;&#x0A;**************&#x0D;&#x0A;*&#x0D;&#x0A;*  Lcy.amount and fcy.amount should be unsigned&#x0D;&#x0A;*&#x0D;&#x0A;      LCY.AMOUNT = ABS(LCY.AMOUNT)&#x0D;&#x0A;      IF FCY.AMOUNT THEN&#x0D;&#x0A;         FCY.AMOUNT = ABS(FCY.AMOUNT)&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*****************&#x0D;&#x0A;BUILD.BASE.ENTRY:&#x0D;&#x0A;*****************&#x0D;&#x0A;*&#x0D;&#x0A;***********************************************************&#x0D;&#x0A;*  Build base STMT.ENTRY entry fields.                    *&#x0D;&#x0A;***********************************************************&#x0D;&#x0A;*&#x0D;&#x0A;      ENTRY = &quot;&quot;&#x0D;&#x0A;*&#x0D;&#x0A;      ENTRY&lt;AC.STE.ACCOUNT.NUMBER&gt; = &quot;&quot;&#x0D;&#x0A;      ENTRY&lt;AC.STE.COMPANY.CODE&gt; = ID.COMPANY&#x0D;&#x0A;      ENTRY&lt;AC.STE.AMOUNT.LCY&gt; = 0&#x0D;&#x0A;      ENTRY&lt;AC.STE.TRANSACTION.CODE&gt; = &apos;&apos;&#x0D;&#x0A;      ENTRY&lt;AC.STE.THEIR.REFERENCE&gt; = ID.NEW&#x0D;&#x0A;      ENTRY&lt;AC.STE.NARRATIVE&gt; = &quot;&quot;&#x0D;&#x0A;      ENTRY&lt;AC.STE.PL.CATEGORY&gt; = &quot;&quot;&#x0D;&#x0A;      ENTRY&lt;AC.STE.CUSTOMER.ID&gt; = &apos;&apos;     ; * Set a value here&#x0D;&#x0A;      ENTRY&lt;AC.STE.ACCOUNT.OFFICER&gt; = &apos;&apos;           ; * Set a value here&#x0D;&#x0A;      ENTRY&lt;AC.STE.PRODUCT.CATEGORY&gt; = &apos;&apos;          ; * Set a value here&#x0D;&#x0A;      ENTRY&lt;AC.STE.VALUE.DATE&gt; = VALUE.DATE&#x0D;&#x0A;      ENTRY&lt;AC.STE.CURRENCY&gt; = LCCY      ; * Set a value here&#x0D;&#x0A;      ENTRY&lt;AC.STE.AMOUNT.FCY&gt; = &quot;&quot;&#x0D;&#x0A;      ENTRY&lt;AC.STE.EXCHANGE.RATE&gt; = &quot;&quot;&#x0D;&#x0A;      ENTRY&lt;AC.STE.POSITION.TYPE&gt; = &apos;TR&apos;&#x0D;&#x0A;      ENTRY&lt;AC.STE.OUR.REFERENCE&gt; = ID.NEW&#x0D;&#x0A;      ENTRY&lt;AC.STE.CURRENCY.MARKET&gt; = &apos;1&apos;&#x0D;&#x0A;      ENTRY&lt;AC.STE.DEPARTMENT.CODE&gt; = &apos;&apos;           ; * Set a value here&#x0D;&#x0A;      ENTRY&lt;AC.STE.SYSTEM.ID&gt; = &lt;&lt;PREFIX&gt;&gt;&#x0D;&#x0A;      ENTRY&lt;AC.STE.BOOKING.DATE&gt; = TODAY&#x0D;&#x0A;      ENTRY&lt;AC.STE.CRF.TYPE&gt; = &quot;&quot;&#x0D;&#x0A;      ENTRY&lt;AC.STE.CRF.TXN.CODE&gt; = &quot;&quot;&#x0D;&#x0A;      ENTRY&lt;AC.STE.CRF.MAT.DATE&gt; = &quot;&quot;&#x0D;&#x0A;*&#x0D;&#x0A;      IF REVERSAL THEN&#x0D;&#x0A;         ENTRY&lt;AC.STE.REVERSAL.MARKER&gt; = &quot;R&quot;&#x0D;&#x0A;      END ELSE&#x0D;&#x0A;         ENTRY&lt;AC.STE.REVERSAL.MARKER&gt; = &quot;&quot;&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*                                                                       *&#x0D;&#x0A;*  Error Handling                                                       *&#x0D;&#x0A;*                                                                       *&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*&#x0D;&#x0A;************&#x0D;&#x0A;FATAL.ERROR:&#x0D;&#x0A;************&#x0D;&#x0A;*&#x0D;&#x0A;      TEXT = ETEXT&#x0D;&#x0A;      CALL FATAL.ERROR(&quot;&lt;&lt;PREFIX&gt;&gt;.ACCOUNTING&quot;)&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
<Property key="t24.macro.system.12" value="t24.macro.system.12&lt;&lt;NR&gt;&gt;SELECT&lt;&lt;NR&gt;&gt;File name?&lt;&lt;NR&gt;&gt;SELECT.STATEMENT = &apos;SELECT &apos;:FN.&lt;&lt;1&gt;&gt;&#x0D;&#x0A;&lt;&lt;1&gt;&gt;.LIST = &apos;&apos;&#x0D;&#x0A;LIST.NAME = &apos;&apos;&#x0D;&#x0A;SELECTED = &apos;&apos;&#x0D;&#x0A;SYSTEM.RETURN.CODE = &apos;&apos;&#x0D;&#x0A;CALL EB.READLIST(SELECT.STATEMENT,&lt;&lt;1&gt;&gt;.LIST,LIST.NAME,SELECTED,SYSTEM.RETURN.CODE)"/>
<Property key="t24.macro.system.10" value="t24.macro.system.10&lt;&lt;NR&gt;&gt;READ.RECORD&lt;&lt;NR&gt;&gt;Name of file to read from?&lt;&lt;NR&gt;&gt;R.&lt;&lt;1&gt;&gt; = &apos;&apos;&#x0D;&#x0A;YERR = &apos;&apos;&#x0D;&#x0A;CALL F.READ(FN.&lt;&lt;1&gt;&gt;,&lt;&lt;1&gt;&gt;.ID,R.&lt;&lt;1&gt;&gt;,F.&lt;&lt;1&gt;&gt;,YERR)"/>
<Property key="t24.macro.system.11" value="t24.macro.system.11&lt;&lt;NR&gt;&gt;RELEASE.RECORD&lt;&lt;NR&gt;&gt;File name to release&lt;&lt;NR&gt;&gt;CALL F.RELEASE(FN.&lt;&lt;1&gt;&gt;,&lt;&lt;1&gt;&gt;.ID,F.&lt;&lt;1&gt;&gt;)"/>
<Property key="t24.macro.system.2" value="t24.macro.system.2&lt;&lt;NR&gt;&gt;DELETE.RECORD&lt;&lt;NR&gt;&gt;File name to delete&lt;&lt;NR&gt;&gt;CALL F.DELETE(FN.&lt;&lt;1&gt;&gt;,&lt;&lt;1&gt;&gt;.ID)"/>
<Property key="t24.remote.channel.name" value="DEFAULT"/>
<Property key="t24.macro.system.1" value="t24.macro.system.1&lt;&lt;NR&gt;&gt;CACHE.READ&lt;&lt;NR&gt;&gt;Filename&lt;&lt;NR&gt;&gt;CALL CACHE.READ(&apos;F.&lt;&lt;1&gt;&gt;&apos;,&lt;&lt;1&gt;&gt;.ID,R.&lt;&lt;1&gt;&gt;,YERR)"/>
<Property key="t24.template.system.TEMPLATE.v5" value="t24.template.system.TEMPLATE.v5&lt;&lt;NR&gt;&gt;TEMPLATE&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-13&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*&lt;doc&gt;&#x0D;&#x0A;* TODO add a description of the application here.&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype Application&#x0D;&#x0A;* @package TODO define the product group and product, e.g. infra.eb&#x0D;&#x0A;* &lt;/doc&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* TODO - You MUST write a .FIELDS routine for the field definitions&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History :&#x0D;&#x0A;*-----------------------&#x0D;&#x0A;* 19/10/07 - EN_10003543&#x0D;&#x0A;*            New Template changes&#x0D;&#x0A;* ----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;region name= Inserts&gt;&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;    $INSERT I_Table&#x0D;&#x0A;* &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    Table.name = &apos;&lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;&apos;        ;* Full application name including product prefix&#x0D;&#x0A;    Table.title = &apos;&lt;&lt;PREFIX&gt;&gt; &lt;&lt;TEMPLATE_NAME&gt;&gt;&apos;       ;* Screen title&#x0D;&#x0A;    Table.stereotype = &apos;H&apos;    ;* H, U, L, W or T&#x0D;&#x0A;    Table.product = &apos;&lt;&lt;PREFIX&gt;&gt;&apos;      ;* Must be on EB.PRODUCT&#x0D;&#x0A;    Table.subProduct = &apos;&apos;     ;* Must be on EB.SUB.PRODUCT&#x0D;&#x0A;    Table.classification = &apos;INT&apos;        ;* As per FILE.CONTROL&#x0D;&#x0A;    Table.systemClearFile = &apos;Y&apos;         ;* As per FILE.CONTROL&#x0D;&#x0A;    Table.relatedFiles = &apos;&apos;   ;* As per FILE.CONTROL&#x0D;&#x0A;    Table.isPostClosingFile = &apos;&apos;        ;* As per FILE.CONTROL&#x0D;&#x0A;    Table.equatePrefix = &apos;XX.YY&apos;        ;* Use to create I_F.EB.LOG.PARAMETER&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    Table.idPrefix = &apos;&apos;       ;* Used by EB.FORMAT.ID if set&#x0D;&#x0A;    Table.blockedFunctions = &apos;&apos;         ;* Space delimeted list of blocked functions&#x0D;&#x0A;    Table.trigger = &apos;&apos;        ;* Trigger field used for OPERATION style fields&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.macro.system.4" value="t24.macro.system.4&lt;&lt;NR&gt;&gt;LOOP.REMOVE&lt;&lt;NR&gt;&gt;Control Variable for list?&lt;&lt;NR&gt;&gt;LOOP&#x0D;&#x0A;REMOVE &lt;&lt;1&gt;&gt;.ID FROM &lt;&lt;1&gt;&gt;.LIST SETTING &lt;&lt;1&gt;&gt;.MARK&#x0D;&#x0A;WHILE &lt;&lt;1&gt;&gt;.ID : &lt;&lt;1&gt;&gt;.MARK&#x0D;&#x0A;REPEAT"/>
<Property key="t24.remote.server.browse.operation" value=""/>
<Property key="t24.macro.system.3" value="t24.macro.system.3&lt;&lt;NR&gt;&gt;F.WRITE&lt;&lt;NR&gt;&gt;File name?&lt;&lt;NR&gt;&gt;CALL F.WRITE(FN.&lt;&lt;1&gt;&gt;,&lt;&lt;1&gt;&gt;.ID,R.&lt;&lt;1&gt;&gt;)"/>
<Property key="t24.macro.system.6" value="t24.macro.system.6&lt;&lt;NR&gt;&gt;MATREAD.RECORD&lt;&lt;NR&gt;&gt;Name of file to read from?;Field name for array size&lt;&lt;NR&gt;&gt;MAT R.&lt;&lt;1&gt;&gt; = &quot;&quot;&#x0D;&#x0A;SIZE = &lt;&lt;2&gt;&gt;&#x0D;&#x0A;YERR = &apos;&apos;&#x0D;&#x0A;CALL F.MATREAD(FN.&lt;&lt;1&gt;&gt;, &lt;&lt;1&gt;&gt;.ID,MAT R.&lt;&lt;1&gt;&gt;,SIZE,F.&lt;&lt;1&gt;&gt;,YERR)"/>
<Property key="t24.macro.system.5" value="t24.macro.system.5&lt;&lt;NR&gt;&gt;MATREAD.LOCK.RECORD&lt;&lt;NR&gt;&gt;Name of file to read from?;Field name for array size&lt;&lt;NR&gt;&gt;MAT R.&lt;&lt;1&gt;&gt; = &quot;&quot;&#x0D;&#x0A;YERR = &apos;&apos;&#x0D;&#x0A;RETRY = &quot;P&quot; ; * prompt the user after a lock&#x0D;&#x0A;SIZE = &lt;&lt;2&gt;&gt;&#x0D;&#x0A;CALL F.MATREADU(FN.&lt;&lt;1&gt;&gt;, &lt;&lt;1&gt;&gt;.ID,MAT R.&lt;&lt;1&gt;&gt;,SIZE,F.&lt;&lt;1&gt;&gt;,YERR,RETRY)"/>
<Property key="t24.macro.system.8" value="t24.macro.system.8&lt;&lt;NR&gt;&gt;OPEN.FILE&lt;&lt;NR&gt;&gt;File name?&lt;&lt;NR&gt;&gt;FN.&lt;&lt;1&gt;&gt; = &apos;F.&lt;&lt;1&gt;&gt;&apos;&#x0D;&#x0A;F.&lt;&lt;1&gt;&gt; = &apos;&apos;&#x0D;&#x0A;CALL OPF(FN.&lt;&lt;1&gt;&gt;,F.&lt;&lt;1&gt;&gt;)"/>
<Property key="t24.template.system.Table.addField.v5" value="t24.template.system.Table.addField.v5&lt;&lt;NR&gt;&gt;Table.addField&lt;&lt;NR&gt;&gt; *-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-20&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addField(fieldName, fieldType, args, neighbour)&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;doc&gt;&#x0D;&#x0A;* Adds a standard field to the application. The standard field types&#x0D;&#x0A;* are defined in I_DataTypes along with the arguments.&#x0D;&#x0A;* @param fieldName  The name of the field to add. The old &quot;F&quot; array item&#x0D;&#x0A;* @param fieldType  The standard T24 data type of the field&#x0D;&#x0A;* @param args  Any arguments (mandatory, no input, etc.)&#x0D;&#x0A;* @param neighbour  Reserved for future use.&#x0D;&#x0A;* @author tcoleman@temenos.com&#x0D;&#x0A;* @public Application Development&#x0D;&#x0A;* @component Contract&#x0D;&#x0A;* @link I_DataTypes&#x0D;&#x0A;* &lt;/doc&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;* --------------------&#x0D;&#x0A;*  EN_10003543&#x0D;&#x0A;*  Creation.&#x0D;&#x0A;*&#x0D;&#x0A;* 27/08/08 - EN_10003800 (SAR-2008-07-31-0002)&#x0D;&#x0A;*            Gosub processArgs changed to call Table.processArgs&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;    $INSERT I_DataTypes&#x0D;&#x0A;    $INSERT I_Table&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    GOSUB init&#x0D;&#x0A;&#x0D;&#x0A;    GOSUB findFieldType&#x0D;&#x0A;&#x0D;&#x0A;    CALL Table.processArgs(args, nArrayItem, tArrayItem)&#x0D;&#x0A;    CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;    IF checkFileItem THEN&#x0D;&#x0A;        CALL Field.setCheckFile(checkFileItem)&#x0D;&#x0A;    END&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;findFieldType:&#x0D;&#x0A;    nArrayItem = &quot;&quot;&#x0D;&#x0A;    tArrayItem = &quot;&quot;&#x0D;&#x0A;    checkFileItem = &apos;&apos;&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    LOCATE fieldType IN DataType.list&lt;1&gt; SETTING fieldTypePos THEN&#x0D;&#x0A;       nArrayItem = DataType.nArrays&lt;fieldTypePos&gt;&#x0D;&#x0A;        tArrayItem = RAISE(DataType.tArrays&lt;fieldTypePos&gt;)&#x0D;&#x0A;        checkFileItem = RAISE(DataType.checkFiles&lt;fieldTypePos&gt;)&#x0D;&#x0A;    END&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;init:&#x0D;&#x0A;&#x0D;&#x0A;    IF NOT(DataType.list) THEN&#x0D;&#x0A;        CALL Table.loadFieldTypes&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;"/>
<Property key="t24.macro.system.7" value="t24.macro.system.7&lt;&lt;NR&gt;&gt;MATWRITE.RECORD&lt;&lt;NR&gt;&gt;File name to write?;Field name for array size?&lt;&lt;NR&gt;&gt;SIZE = &lt;&lt;2&gt;&gt;&#x0D;&#x0A;CALL F.MATWRITE(FN.&lt;&lt;1&gt;&gt;,&lt;&lt;1&gt;&gt;.ID,MAT R.&lt;&lt;1&gt;&gt;, SIZE)"/>
<Property key="t24.basic.editor.properties.ver" value="21.0.0.202104270204"/>
<Property key="t24.macro.system.9" value="t24.macro.system.9&lt;&lt;NR&gt;&gt;READ.LOCK.RECORD&lt;&lt;NR&gt;&gt;Name of file to read from?&lt;&lt;NR&gt;&gt;R.&lt;&lt;1&gt;&gt; = &quot;&quot;&#x0D;&#x0A;YERR = &apos;&apos;&#x0D;&#x0A;RETRY = &quot;P&quot; ; * prompt the user after a lock&#x0D;&#x0A;CALL F.READU(FN.&lt;&lt;1&gt;&gt;, &lt;&lt;1&gt;&gt;.ID,R.&lt;&lt;1&gt;&gt;,F.&lt;&lt;1&gt;&gt;,YERR,RETRY)"/>
<Property key="t24.remote.second.channel.name" value="DEFAULT"/>
<Property key="t24.template.system.Table.addAmountField.v5" value="t24.template.system.Table.addAmountField.v5&lt;&lt;NR&gt;&gt;Table.addAmountField&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;Rating&gt;-11&lt;/Rating&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addAmountField(fieldName, currencyFieldName,args, neighbour)&#x0D;&#x0A; *----------------------------------------------------------------------------- &#x0D;&#x0A;* &lt;doc&gt; &#x0D;&#x0A;* Adds and amount field to the application. Amoutns are held by currency for validation&#x0D;&#x0A; * and formatting - this requires that the name of the field that is used to hold the currency&#x0D;&#x0A; * is supplied in the currencyFieldName parameter. &#x0D;&#x0A;* @param fieldName  The name of the field to add. The old &quot;F&quot; array item&#x0D;&#x0A; * @param currencyFieldName  The name of the field that holds the currency that the amount is held in&#x0D;&#x0A; * @param args        Any arguments (mandatory, no input, etc.) &#x0D;&#x0A;* @param neighbour  Reserved for future use. &#x0D;&#x0A;* @author tcoleman@temenos.com &#x0D;&#x0A;* @public Application Development &#x0D;&#x0A;* @component Contract &#x0D;&#x0A;* @link I_DataTypes &#x0D;&#x0A;* &lt;/doc&gt; &#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A; $INSERT I_EQUATE &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;  &#x0D;&#x0A;   GOSUB setFieldType&#x0D;&#x0A;     CALL Table.processArgs(args, nArrayItem, tArrayItem)&#x0D;&#x0A;    CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;  &#x0D;&#x0A;   RETURN&#x0D;&#x0A;  &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; setFieldType: &#x0D;&#x0A;* &#x0D;&#x0A;* Find the field position of the currency field by looping through the F array&#x0D;&#x0A; * &#x0D;&#x0A;   ccyFieldNumber = 0&#x0D;&#x0A;    i = 1 &#x0D;&#x0A;   LOOP &#x0D;&#x0A;   UNTIL F(i) = &apos;&apos; OR ccyFieldNumber &lt;&gt; 0 OR currencyFieldName = &apos;&apos;&#x0D;&#x0A;  &#x0D;&#x0A;      BEGIN CASE&#x0D;&#x0A;          CASE F(i) = currencyFieldName&#x0D;&#x0A;             ccyFieldNumber = i &#x0D;&#x0A;         CASE F(i)[4,99] = currencyFieldName&#x0D;&#x0A;             ccyFieldNumber = i &#x0D;&#x0A;         CASE F(i)[7,99] = currencyFieldName&#x0D;&#x0A;             ccyFieldNumber = i &#x0D;&#x0A;      END CASE &#x0D;&#x0A;      i ++; &#x0D;&#x0A; &#x0D;&#x0A;   REPEAT&#x0D;&#x0A;  &#x0D;&#x0A;   nArrayItem = &quot;19&quot;&#x0D;&#x0A;    tArrayItem = &quot;AMT&quot; &#x0D;&#x0A;   IF ccyFieldNumber THEN &#x0D;&#x0A;      tArrayItem&lt;2,2&gt; = ccyFieldNumber&#x0D;&#x0A;    END &#x0D;&#x0A;   RETURN &#x0D;&#x0A;"/>
<Property key="t24.template.system.TEMPLATE.RECORD.v5" value="t24.template.system.TEMPLATE.RECORD.v5&lt;&lt;NR&gt;&gt;TEMPLATE.RECORD&lt;&lt;NR&gt;&gt;* Version 9 16/05/01  GLOBUS Release No. 200511 31/10/05&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-34&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.RECORD&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;!** Simple SUBROUTINE template&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype recordcheck&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;* @uses E&#x0D;&#x0A;* @uses AF&#x0D;&#x0A;*!&#x0D;&#x0A;*----------------------------------------------------------------------&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;&#x0D;&#x0A;* Check if the record is okay to input to...&#x0D;&#x0A;      GOSUB CHECK.RECORD&#x0D;&#x0A;      IF E = &apos;&apos; THEN&#x0D;&#x0A;         GOSUB SET.ENRICHMENTS&#x0D;&#x0A;         GOSUB POPULATE.COMMONS&#x0D;&#x0A;      END&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------&#x0D;&#x0A;POPULATE.COMMONS:&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;SET.ENRICHMENTS:&#x0D;&#x0A;      CALL EB.SET.FIELD.ENRICHMENT(FIELD.NUMBER, FIELD.ENRICHMENT)&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*--------------------------------------------------------------------&#x0D;&#x0A;CHECK.RECORD:&#x0D;&#x0A;* Input not allowed for matured contracts!&#x0D;&#x0A;      IF V$FUNCTION MATCHES &apos;I&apos; : VM : &apos;R&apos; THEN&#x0D;&#x0A;* TODO add specific checks for blocking functions if required,&#x0D;&#x0A;*         IF NOT(R.NEW(MY.RECORD.STATUS) EQ &apos;INAU&apos;) AND R.NEW(MY.CONTRACT.STATUS) = &apos;LIQ&apos; THEN&#x0D;&#x0A;*            E =&apos;SAMPLE.ERROR.CODE&apos;&#x0D;&#x0A;*         END&#x0D;&#x0A;      END&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.addYesNoField.v5" value="t24.template.system.Table.addYesNoField.v5&lt;&lt;NR&gt;&gt;Table.addYesNoField&lt;&lt;NR&gt;&gt;*----------------------------------------------------------------------------- &#x0D;&#x0A;* &lt;Rating&gt;-11&lt;/Rating&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;     SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addYesNoField(fieldName, args, neighbour) &#x0D;&#x0A;* &lt;doc&gt; &#x0D;&#x0A;* Adds a simple field that only holds YES or blank.&#x0D;&#x0A; * @author tcoleman@temenos.com &#x0D;&#x0A;* @public Application Development &#x0D;&#x0A;* @component Contract &#x0D;&#x0A;* @param fieldName The name of the field to add&#x0D;&#x0A; * @param args (optional) Additional arguments (mandatory, noinput, etc.)&#x0D;&#x0A; * @param neighbour (optional) Reserved for future used. &#x0D;&#x0A;* @link Table.addField &#x0D;&#x0A;* &lt;/doc&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;     $INSERT I_COMMON &#x0D;&#x0A;    $INSERT I_EQUATE &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      &#x0D;&#x0A;    GOSUB setFieldType&#x0D;&#x0A;     CALL Table.processArgs(args, nArrayItem, tArrayItem)&#x0D;&#x0A;     CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;      &#x0D;&#x0A;    RETURN&#x0D;&#x0A;      &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; setFieldType:  &#x0D;&#x0A;    nArrayItem = &quot;3&quot;&#x0D;&#x0A;     tArrayItem = &quot;&quot; &#x0D;&#x0A;    tArrayItem&lt;2&gt; = &apos;YES_&apos;&#x0D;&#x0A;      &#x0D;&#x0A;*TODO handle args&#x0D;&#x0A;      &#x0D;&#x0A;RETURN&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.processArgs.v5" value="t24.template.system.Table.processArgs.v5&lt;&lt;NR&gt;&gt;Table.processArgs&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-4&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.processArgs(args, nArrayItem, tArrayItem) &#x0D;&#x0A;* &lt;doc&gt; &#x0D;&#x0A;* @param nArrayItem  The N array item to process&#x0D;&#x0A; * @param tArrayItem  The F array item to process &#x0D;&#x0A;* @param args  Any arguments (mandatory, no input, etc.)&#x0D;&#x0A; * &lt;/doc&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; $INSERT I_COMMON &#x0D;&#x0A;$INSERT I_EQUATE &#x0D;&#x0A;$INSERT I_Table&#x0D;&#x0A;$INSERT I_DataTypes&#x0D;&#x0A; *-----------------------------------------------------------------------------&#x0D;&#x0A; &#x0D;&#x0A;CONVERT &apos;,&apos; TO FM IN args&#x0D;&#x0A;  &#x0D;&#x0A;   LOOP&#x0D;&#x0A;       REMOVE arg FROM args SETTING argMark&#x0D;&#x0A;    WHILE arg : argMark &#x0D;&#x0A; &#x0D;&#x0A;      BEGIN CASE&#x0D;&#x0A;          CASE &apos;,&apos;:arg = Field_NoChange OR &apos;,&apos;:arg = Field_NoInput&#x0D;&#x0A;             tArrayItem&lt;3&gt; = arg &#x0D;&#x0A;         CASE &apos;,&apos;:arg = Field_Mandatory&#x0D;&#x0A;             nArrayItem := &apos;.1&apos;&#x0D;&#x0A;         CASE &apos;,&apos;:arg = Field_AllowNegative ; * Should only be for amounts really&#x0D;&#x0A;          tArrayItem&lt;2,1&gt; = &apos;-&apos;    &#x0D;&#x0A;         CASE &apos;,&apos;:arg = Field_Unique ; * Needs to do a call to DUP&#x0D;&#x0A;             Table.validationFields&lt;1,-1&gt; = Table.currentFieldPosition &#x0D;&#x0A;         CASE &apos;,&apos;:arg = Field_NoNulls ; * Needs to do a call to FT.NULLS.CHECK&#x0D;&#x0A;             Table.validationFields&lt;2,-1&gt; = Table.currentFieldPosition &#x0D;&#x0A;      END CASE &#x0D;&#x0A; &#x0D;&#x0A; &#x0D;&#x0A;   REPEAT&#x0D;&#x0A;  &#x0D;&#x0A;   RETURN&#x0D;&#x0A;"/>
<Property key="r09.key" value="!@updtest1"/>
<Property key="t24.template.system.XX.CROSSVAL.v5" value="t24.template.system.XX.CROSSVAL.v5&lt;&lt;NR&gt;&gt;XX.CROSSVAL&lt;&lt;NR&gt;&gt;* Version 2 02/06/00  GLOBUS Release No. G11.0.00 29/06/00&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-71&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.CROSSVAL&#x0D;&#x0A;************************************************************************&#x0D;&#x0A;* Cross validation for XX&#x0D;&#x0A;* TODO - Replace XX with table name&#x0D;&#x0A;************************************************************************&#x0D;&#x0A;*** &lt;region name= Modification History&gt;&#x0D;&#x0A;***&#x0D;&#x0A;************************************************************************&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;*&#x0D;&#x0A;* 15/03/06 - EN_10002859 - New Template Programming&#x0D;&#x0A;*            Changing XX.CROSSVAL to suit the new template prograaming. The new templates&#x0D;&#x0A;*            do not have check.fields.&#x0D;&#x0A;*            Ref:SAR-2006-03-07-0001&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*** &lt;region name= Inserts&gt;&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;*$INSERT I_F.XX  ; * the insert of the template&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*** &lt;region name= Main section&gt;&#x0D;&#x0A;      GOSUB INITIALISE&#x0D;&#x0A;      &#x0D;&#x0A;      GOSUB PROCESS.CROSSVAL&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= INIT&gt;&#x0D;&#x0A;INITIALISE:&#x0D;&#x0A;***&#x0D;&#x0A;&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= PROCESS.CROSSVAL&gt;&#x0D;&#x0A;PROCESS.CROSSVAL:&#x0D;&#x0A;***&#x0D;&#x0A;      IF MESSAGE EQ &apos;&apos; THEN     ;* Only during commit...&#x0D;&#x0A;         BEGIN CASE&#x0D;&#x0A;            CASE V$FUNCTION EQ &apos;D&apos;&#x0D;&#x0A;               GOSUB DELETE.CROSSVAL&#x0D;&#x0A;            CASE V$FUNCTION EQ &apos;R&apos;&#x0D;&#x0A;               GOSUB REVERSE.CROSSVAL&#x0D;&#x0A;            CASE 1      ;* The real crossval...&#x0D;&#x0A;               GOSUB REAL.CROSSVAL&#x0D;&#x0A;         END CASE&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      IF MESSAGE EQ &apos;AUT&apos; OR MESSAGE EQ &apos;VER&apos; THEN  ;* During authorisation and verification...&#x0D;&#x0A;         GOSUB AUTH.CROSSVAL&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      IF MESSAGE EQ &apos;ERROR&apos; THEN          ;* During delivery preview and default...&#x0D;&#x0A;&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= REAL CROSSVAL&gt;&#x0D;&#x0A;REAL.CROSSVAL:&#x0D;&#x0A;*&#x0D;&#x0A;* Real cross validation goes here....&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= DELETE.CROSSVAL&gt;&#x0D;&#x0A;DELETE.CROSSVAL:&#x0D;&#x0A;***&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= REVERSE.CROSSVAL&gt;&#x0D;&#x0A;REVERSE.CROSSVAL:&#x0D;&#x0A;***&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= AUTH.CROSSVAL&gt;&#x0D;&#x0A;AUTH.CROSSVAL:&#x0D;&#x0A;***&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
<Property key="t24.remote.compile.xml.response" value=""/>
<Property key="t24.template.system.XX.EOD.v5" value="t24.template.system.XX.EOD.v5&lt;&lt;NR&gt;&gt;XX.EOD&lt;&lt;NR&gt;&gt;* Version 1 13/04/00  GLOBUS Release No. 200508 30/06/05&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;0&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.EOD(ID)&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Mutli-threaded Close of Business routine&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;$INSERT I_&lt;&lt;PREFIX&gt;&gt;.EOD.COMMON&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Perform the transaction/contract processing in this routine. All files &amp; standard&#x0D;&#x0A;* variables should be setup in XX.EOD.LOAD and passed using the named common I_&lt;&lt;PREFIX&gt;&gt;.EOD.COMMON&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
<Property key="t24.template.system.TEMPLATE.INITIALISE.v5" value="t24.template.system.TEMPLATE.INITIALISE.v5&lt;&lt;NR&gt;&gt;TEMPLATE.INITIALISE&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-22&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.INITIALISE&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;!** Simple INITIALISE template&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype subroutine&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;*!&#x0D;&#x0A;*** &lt;region name= PROGRAM DESCRIPTION&gt;&#x0D;&#x0A;***&#x0D;&#x0A;*&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= MODIFICATION HISTORY&gt;&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;* Modification History :&#x0D;&#x0A;*&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= INSERTS&gt;&#x0D;&#x0A;***&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;$INSERT I_METHODS.AND.PROPERTIES&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= MAIN PROCESS LOGIC&gt;&#x0D;&#x0A;***&#x0D;&#x0A;      GOSUB INITIALISE&#x0D;&#x0A;      IF NOT(E) THEN&#x0D;&#x0A;         GOSUB PROCESS&#x0D;&#x0A;      END&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= PROCESS&gt;&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;PROCESS:&#x0D;&#x0A;*&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*** &lt;region name= INIT&gt;&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;INITIALISE:&#x0D;&#x0A;*&#x0D;&#x0A;*&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.addReservedField.v5" value="t24.template.system.Table.addReservedField.v5&lt;&lt;NR&gt;&gt;Table.addReservedField&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;Rating&gt;-10&lt;/Rating&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addReservedField(fieldName) &#x0D;&#x0A;* &lt;doc&gt; &#x0D;&#x0A;* Adds a reserved field to the application&#x0D;&#x0A; * @param    fieldName The name of the reserved field to add. Must be unique.&#x0D;&#x0A; *----------------------------------------------------------------------------- &#x0D;&#x0A;* &lt;/doc&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; $INSERT I_COMMON &#x0D;&#x0A;$INSERT I_EQUATE &#x0D;&#x0A;$INSERT I_Table &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;  &#x0D;&#x0A;   GOSUB setFieldType&#x0D;&#x0A;          &#x0D;&#x0A;   CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;     &#x0D;&#x0A;   RETURN&#x0D;&#x0A;  &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; setFieldType: &#x0D;&#x0A;    &#x0D;&#x0A;   nArrayItem = &quot;35&quot;&#x0D;&#x0A;    tArrayItem = &quot;&quot; &#x0D;&#x0A;   tArrayItem&lt;3&gt; = &apos;NOINPUT&apos;&#x0D;&#x0A;    neighbour = &quot;&quot; &#x0D;&#x0A;    &#x0D;&#x0A;   RETURN&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.defineIdProperties.v5" value="t24.template.system.Table.defineIdProperties.v5&lt;&lt;NR&gt;&gt;Table.defineIdProperties&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-2&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.defineIdProperties(idName, dataType)&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;doc&gt;&#x0D;&#x0A; * @param idName The name of the key. The old &quot;ID.F&quot; array item&#x0D;&#x0A; * @param dataType The data type of the key&#x0D;&#x0A; * @public Table Creation&#x0D;&#x0A; * &lt;/doc&gt;&#x0D;&#x0A;*--------------------------------------------------------------------------&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;    $INSERT I_DataTypes&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    ID.F = idName&#x0D;&#x0A;    ID.CONCATFILE = &apos;&apos;        ;* initialsie&#x0D;&#x0A;&#x0D;&#x0A;    LOCATE dataType IN DataType.list&lt;1&gt; SETTING fieldTypePos THEN&#x0D;&#x0A;        ID.N = DataType.nArrays&lt;fieldTypePos&gt;&#x0D;&#x0A;        ID.T = RAISE(DataType.tArrays&lt;fieldTypePos&gt;)&#x0D;&#x0A;    END ELSE&#x0D;&#x0A;        ID.N = dataType&lt;2&gt;    ;* might be like 16.1&#x0D;&#x0A;        ID.T = RAISE(dataType&lt;3&gt;)       ;* might set ID.T like ID.T = &apos;&apos; ; ID.T&lt;2&gt; = &apos;SYSTEM&apos;&#x0D;&#x0A;    END&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.setAttributeOnFields.v5" value="t24.template.system.Table.setAttributeOnFields.v5&lt;&lt;NR&gt;&gt;Table.setAttributeOnFields&lt;&lt;NR&gt;&gt; *-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;Rating&gt;-2&lt;/Rating&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.setAttributeOnFields(attribute, fieldList) &#x0D;&#x0A; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;doc&gt; &#x0D;&#x0A;* Routine to set a number of fields to be NOINPUT, NOINPUT or iputtable.&#x0D;&#x0A; * Loops through each field in fieldList and sets the atribute in the third field of the T array.&#x0D;&#x0A; * @public Application Development &#x0D;&#x0A;* @component Contract &#x0D;&#x0A;* @param attribute The attribute to set. One of NOINPUT, NOCHANGE or &quot;&quot;&#x0D;&#x0A; * @param fieldList The list of fields to set the attribute on. These are field numbers&#x0D;&#x0A; * &lt;/doc&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; $INSERT I_COMMON &#x0D;&#x0A;$INSERT I_EQUATE &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    LOOP &#x0D;&#x0A;      REMOVE field FROM fieldList SETTING fieldMark&#x0D;&#x0A;    WHILE field : fieldMark &#x0D;&#x0A;      T(field)&lt;3&gt; = attribute ; * NOINPUT, NOCHANGE&#x0D;&#x0A;    REPEAT &#x0D;&#x0A;   RETURN &#x0D;&#x0A;"/>
<Property key="t24.remote.server.browse.pattern" value=""/>
<Property key="r10.key" value="!@#r10upd2"/>
<Property key="t24.template.system.TEMPLATE.AUTHORISE.v5" value="t24.template.system.TEMPLATE.AUTHORISE.v5&lt;&lt;NR&gt;&gt;TEMPLATE.AUTHORISE&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-22&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.AUTHORISE&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;!** Simple AUTHORISE template&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype subroutine&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;*!&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= PROGRAM DESCRIPTION&gt;&#x0D;&#x0A;*** &lt;desc&gt;Program description&lt;/desc&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Program Description&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= MODIFICATION HISTORY&gt;&#x0D;&#x0A;*** &lt;desc&gt;Modification history&lt;/desc&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= INSERTS&gt;&#x0D;&#x0A;*** &lt;desc&gt;Inserts&lt;/desc&gt;&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= MAIN PROCESS LOGIC&gt;&#x0D;&#x0A;*** &lt;desc&gt;Main process logic&lt;/desc&gt;&#x0D;&#x0A;      GOSUB INITIALISE&#x0D;&#x0A;      GOSUB PROCESS&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= PROCESS&gt;&#x0D;&#x0A;*** &lt;desc&gt;Process&lt;/desc&gt;&#x0D;&#x0A;PROCESS:&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= INITIALISE&gt;&#x0D;&#x0A;*** &lt;desc&gt;Initialise&lt;/desc&gt;&#x0D;&#x0A;INITIALISE:&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.template.system.I_XX.EOD.COMMON.v5" value="t24.template.system.I_XX.EOD.COMMON.v5&lt;&lt;NR&gt;&gt;I_XX.EOD.COMMON&lt;&lt;NR&gt;&gt;* Version 1 13/04/00  GLOBUS Release No. G14.0.01 14/08/03&#x0D;&#x0A;*&#x0D;&#x0A;* Common area for XX.EOD multi-threaded Close of Business job&#x0D;&#x0A;* This will contain things such as filename, file variables and standard variables.&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      COMMON /&lt;&lt;PREFIX&gt;&gt;.EOD/ R.EOD.FILE,&#x0D;&#x0A;         FN.EOD.FILE, F.EOD.FILE&#x0D;&#x0A;"/>
<Property key="t24.template.system.CONV.FILE.ROUTINE.TEMPLATE.v5" value="t24.template.system.CONV.FILE.ROUTINE.TEMPLATE.v5&lt;&lt;NR&gt;&gt;CONV.FILE.ROUTINE.TEMPLATE&lt;&lt;NR&gt;&gt;*&#x0D;&#x0A;      SUBROUTINE &lt;&lt;TEMPLATE_NAME&gt;&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Template file routine, to be used as a basis for building a FILE.ROUTINE&#x0D;&#x0A;* to be run as part of the CONVERSION.DETAILS record.&#x0D;&#x0A;* This routine should only be used to do such things as change record keys etc&#x0D;&#x0A;* where ever possible use the RECORD.ROUTINE to convert/populate record data fields.&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;*&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;&#x0D;&#x0A;* Equate field numbers to position manually, do no use $INSERT&#x0D;&#x0A;      EQU SUFFIXES TO 3&#x0D;&#x0A;      EQU FILE.CONTROL.CLASS TO 6&#x0D;&#x0A;&#x0D;&#x0A;      SAVE.ID.COMPANY = ID.COMPANY&#x0D;&#x0A;&#x0D;&#x0A;      GOSUB INITIALISATION   ; * open files etc&#x0D;&#x0A;&#x0D;&#x0A;      GOSUB GET.FILE.CLASSIFICATION   ; * get file classification&#x0D;&#x0A;&#x0D;&#x0A;      LOOP&#x0D;&#x0A;         REMOVE K.COMPANY FROM COMPANIES SETTING MORE.COMPANIES&#x0D;&#x0A;      WHILE K.COMPANY:MORE.COMPANIES&#x0D;&#x0A;&#x0D;&#x0A;         IF K.COMPANY NE ID.COMPANY THEN&#x0D;&#x0A;            CALL LOAD.COMPANY(K.COMPANY)&#x0D;&#x0A;         END&#x0D;&#x0A;&#x0D;&#x0A;         GOSUB COMPANY.INITIALISATION   ; * specific COMPANY initialisation&#x0D;&#x0A;&#x0D;&#x0A;         GOSUB PROCESS.FILE   ; * perform required action on company file&#x0D;&#x0A;&#x0D;&#x0A;         IF UNAUTH.REQD THEN&#x0D;&#x0A;            F.FILENAME = F.FILENAME$NAU&#x0D;&#x0A;            GOSUB PROCESS.FILE   ; * perform required action on company file&#x0D;&#x0A;         END&#x0D;&#x0A;&#x0D;&#x0A;         IF HIST.REQD THEN&#x0D;&#x0A;            F.FILENAME = F.FILENAME$HIS&#x0D;&#x0A;            GOSUB PROCESS.FILE   ; * perform required action on company file&#x0D;&#x0A;         END&#x0D;&#x0A;&#x0D;&#x0A;      REPEAT&#x0D;&#x0A;&#x0D;&#x0A;      IF ID.COMPANY NE SAVE.ID.COMPANY THEN&#x0D;&#x0A;         CALL LOAD.COMPANY(SAVE.ID.COMPANY)&#x0D;&#x0A;      END&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;PROCESS.FILE:&#x0D;&#x0A;* perform required action on company specific file&#x0D;&#x0A;&#x0D;&#x0A;* do not use EB.READLIST as large volumes can cause hanging&#x0D;&#x0A;      SELECT F.FILENAME&#x0D;&#x0A;      END.OF.LIST = 0&#x0D;&#x0A;&#x0D;&#x0A;      LOOP&#x0D;&#x0A;         READNEXT K.ID ELSE END.OF.LIST = 1&#x0D;&#x0A;      UNTIL END.OF.LIST&#x0D;&#x0A;&#x0D;&#x0A;* use READ, not F.READ&#x0D;&#x0A;         READ R.RECORD FROM F.FILENAME,K.ID THEN&#x0D;&#x0A;* preform specific file conversion here&#x0D;&#x0A;&#x0D;&#x0A;            WRITE R.RECORD ON F.FILENAME,K.ID&#x0D;&#x0A;&#x0D;&#x0A;         END&#x0D;&#x0A;&#x0D;&#x0A;      REPEAT&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;COMPANY.INITIALISATION:&#x0D;&#x0A;* specific COMPANY initialisation&#x0D;&#x0A;* open files and read records specific to each company&#x0D;&#x0A;&#x0D;&#x0A;      UNAUTH.REQD = 0&#x0D;&#x0A;      HIST.REQD = 0&#x0D;&#x0A;&#x0D;&#x0A;      F.FILENAME = &apos;&apos;&#x0D;&#x0A;      CALL OPF(ID,F.FILENAME)&#x0D;&#x0A;&#x0D;&#x0A;      LOCATE &quot;$NAU&quot; IN R.FILE.CONTROL&lt;SUFFIXES,1&gt; SETTING YPOS THEN&#x0D;&#x0A;         UNAUTH.REQD = 1&#x0D;&#x0A;         F.FILENAME$NAU = &apos;&apos;&#x0D;&#x0A;         ID.NAU = ID:&quot;$NAU&quot;&#x0D;&#x0A;         CALL OPF(ID.NAU,F.FILENAME$NAU)&#x0D;&#x0A;      END&#x0D;&#x0A;&#x0D;&#x0A;      LOCATE &quot;$HIS&quot; IN R.FILE.CONTROL&lt;SUFFIXES,1&gt; SETTING YPOS THEN&#x0D;&#x0A;         HIST.REQD = 1&#x0D;&#x0A;         F.FILENAME$HIS = &apos;&apos;&#x0D;&#x0A;         ID.HIS = ID:&quot;$HIS&quot;&#x0D;&#x0A;         CALL OPF(ID.HIS,F.FILENAME$HIS)&#x0D;&#x0A;      END&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;GET.FILE.CLASSIFICATION:&#x0D;&#x0A;* get file classification&#x0D;&#x0A;* read from FILE.CONTROL and get list of companies to be converted&#x0D;&#x0A;&#x0D;&#x0A;      R.FILE.CONTROL = &apos;&apos;&#x0D;&#x0A;      READ R.FILE.CONTROL FROM F.FILE.CONTROL,PGM.NAME ELSE&#x0D;&#x0A;         CALL FATAL.ERROR(&apos;&lt;&lt;PREFIX&gt;&gt;&apos;)&#x0D;&#x0A;      END&#x0D;&#x0A;&#x0D;&#x0A;      CLASSIFICATION = R.FILE.CONTROL&lt;FILE.CONTROL.CLASS&gt;&#x0D;&#x0A;      CALL GET.CONVERSION.COMPANIES(CLASSIFICATION,PGM.NAME,COMPANIES)&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;INITIALISATION:&#x0D;&#x0A;* open files etc&#x0D;&#x0A;&#x0D;&#x0A;      PGM.NAME = &apos;FILENAME&apos;   ; * set the name of the application to be converted&#x0D;&#x0A;      ID = &apos;F.&apos;:PGM.NAME   ; * set the name of the file to be converted, without prefix&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
<Property key="t24.server.view.second.remote.server.directory" value="GLOBUS.BP"/>
<Property key="t24.template.system.Table.defineId.v5" value="t24.template.system.Table.defineId.v5&lt;&lt;NR&gt;&gt;Table.defineId&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;0&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.defineId(idName, dataType)&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;doc&gt;&#x0D;&#x0A;* @param idName The name of the key. The old &quot;ID.F&quot; array item&#x0D;&#x0A;* @param dataType The data type of the key&#x0D;&#x0A;* @public Table Creation&#x0D;&#x0A;* &lt;/doc&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;* --------------------&#x0D;&#x0A;*  EN_10003543&#x0D;&#x0A;*  Creation.&#x0D;&#x0A;*&#x0D;&#x0A;*  27/08/08 - EN_10003800 (SAR-2008-07-31-0002)&#x0D;&#x0A;*             Allow custom ID definition by calling defineIdProperties&#x0D;&#x0A;*&#x0D;&#x0A;*----------------------------------------------------------------------------&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;    $INSERT I_DataTypes&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    CALL Table.defineIdProperties(idName, dataType)&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.addVirtualTableField.v5" value="t24.template.system.Table.addVirtualTableField.v5&lt;&lt;NR&gt;&gt;Table.addVirtualTableField&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;0&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addVirtualTableField(fieldName, table,args, neighbour) &#x0D;&#x0A;* &lt;doc&gt;&#x0D;&#x0A;* Adds a field with a virtual table to the application. The virtual table is defined in EB.LOOKUP.&#x0D;&#x0A;* This is used to create a field with a finite list of options, but where the list of options&#x0D;&#x0A;* needs to be configurable, e.g. title (Mr. Mrs. etc.)&#x0D;&#x0A;* @author tcoleman@temenos.com&#x0D;&#x0A;* @public Application Development&#x0D;&#x0A;* @component Contract&#x0D;&#x0A;* @param fieldName The name of the field to add&#x0D;&#x0A;* @param table The name of the virtual table. As defined in EB.LOOKUP.&#x0D;&#x0A;* @param args (optional) Additional arguments (mandatory, noinput, etc.)&#x0D;&#x0A;* @param neighbour (optional) Reserved for future used.&#x0D;&#x0A;* @link Table.addField&#x0D;&#x0A;* @link EB.LOOKUP&#x0D;&#x0A;* &lt;/doc&gt; &#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A; $INSERT I_EQUATE &#x0D;&#x0A; &#x0D;&#x0A;   CALL EB.LOOKUP.LIST(table)&#x0D;&#x0A;    tArrayItem = table &#x0D;&#x0A;   nArrayItem = &apos;35&apos; &#x0D;&#x0A;   CALL Table.processArgs(args, nArrayItem, tArrayItem)&#x0D;&#x0A;    CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;  &#x0D;&#x0A;RETURN&#x0D;&#x0A;"/>
<Property key="t24.template.system.THE.TEMPLATE.v5" value="t24.template.system.THE.TEMPLATE.v5&lt;&lt;NR&gt;&gt;THE.TEMPLATE&lt;&lt;NR&gt;&gt;&#x0D;&#x0A;&#x0D;&#x0A;* Version 9 15/11/00  GLOBUS Release No. G11.1.01 11/12/00&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-307&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;&#x0D;&#x0A;******************************************************************&#x0D;&#x0A;* Core template routine that is called BY all new applications&#x0D;&#x0A;* which are based on BLANK.TEMPLATE. This routine runs the application by calling&#x0D;&#x0A;* all the associated routines like &lt;APPL.NAME&gt;.FIELDS,&lt;APPL.NAME&gt;.ID,&#x0D;&#x0A;* &lt;APPL.NAME&gt;.VALIDATE, etc... based on the values set in the array C_METHODS&#x0D;&#x0A;* inside the application routine.&#x0D;&#x0A;*&#x0D;&#x0A;* Some behaviour is also defined in the C_PROPERTIES array&#x0D;&#x0A;*&#x0D;&#x0A;* @see BLANK.TEMPLATE&#x0D;&#x0A;* @see TEMPLATE.FIELDS&#x0D;&#x0A;* @see I_METHODS.AND.PROPERTIES&#x0D;&#x0A;*&#x0D;&#x0A;* Allows actions to be run against a template similar to the V function&#x0D;&#x0A;* Identified as an M(Method) function&#x0D;&#x0A;* but without the display management&#x0D;&#x0A;* this will allow standard validation and construction of R.NEW etc&#x0D;&#x0A;* An Action is run as FUNCTION = M&#x0D;&#x0A;* If Function = M then V$ACTION must be defined. This will be picked&#x0D;&#x0A;* up from RECORDID.FUNCTION&#x0D;&#x0A;*&#x0D;&#x0A;* @author Tony Coleman&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modifications:&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* 15/03/06 - EN_10002859 - New Template Programming - Tony Coleman&#x0D;&#x0A;*            Creation&#x0D;&#x0A;*            Ref:SAR-2006-03-07-0001&#x0D;&#x0A;*&#x0D;&#x0A;* 10/05/06 - BG_100010883&#x0D;&#x0A;*            Additions / changes:&#x0D;&#x0A;*            1. Operations processing&#x0D;&#x0A;*            2. Default method added&#x0D;&#x0A;*            3. CROSSVAL method renamed to VALIDATE&#x0D;&#x0A;* 29/09/06 - BG_100012146&#x0D;&#x0A;*            For blocked functions, template throws error message and allows us to proceed.&#x0D;&#x0A;*&#x0D;&#x0A;* 12/01/07 - EN_10003196&#x0D;&#x0A;*            Add M function to the Template&#x0D;&#x0A;*&#x0D;&#x0A;* 13/03/07 - BG_100013344&#x0D;&#x0A;*            In GTS show the actual error message&#x0D;&#x0A;*&#x0D;&#x0A;* 08/07/07 - BG_100014560&#x0D;&#x0A;*            If GTSERROR is set we should use this to return the error&#x0D;&#x0A;*&#x0D;&#x0A;* 28/07/07 - EN_10003420&#x0D;&#x0A;*            Remove the code for ACTION related update to ACTION.RECORD.WRITE&#x0D;&#x0A;*&#x0D;&#x0A;* 22/08/07 - BG_100014957&#x0D;&#x0A;*            User can reverse a record in a V4 template application&#x0D;&#x0A;*            despite this being a blocked function.&#x0D;&#x0A;*&#x0D;&#x0A;* 19/10/07 - EN_10003543&#x0D;&#x0A;*            New template changes&#x0D;&#x0A;*&#x0D;&#x0A;* 02/11/07 - BG_100015676&#x0D;&#x0A;*            AA Product condition problem with new template changes&#x0D;&#x0A;*&#x0D;&#x0A;* 07/11/07 - BG_100015736&#x0D;&#x0A;*            1. Added the missing code for AA functionality in the new template.&#x0D;&#x0A;*            2. Do the field defintions every time.&#x0D;&#x0A;*&#x0D;&#x0A;* 09/05/08 - BG_100018407&#x0D;&#x0A;*            Allow workfiles to have overrides.&#x0D;&#x0A;*&#x0D;&#x0A;* 27/08/08 - EN_10003800 (SAR-2008-07-31-0002)&#x0D;&#x0A;*            Clear common variables to do MATRIX.UPDATE properly for next template&#x0D;&#x0A;*&#x0D;&#x0A;* 12/03/09 - BG_100022634&#x0D;&#x0A;*            Allow verify &apos;V&apos; function by checking OS.GET.VERIFY.APPS&#x0D;&#x0A;*&#x0D;&#x0A;* 01/07/09 - BG_100024338&#x0D;&#x0A;*            Fields to reflect logical order&#x0D;&#x0A;*&#x0D;&#x0A;* 20/07/09 - BG_100024579&#x0D;&#x0A;*            Enabled .PREVIEW method in the template&#x0D;&#x0A;*            REF:TTS0908460&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;    $INSERT I_F.OFS.SOURCE&#x0D;&#x0A;    $INSERT I_F.OFS.STATUS.FLAG&#x0D;&#x0A;    $INSERT I_GTS.COMMON&#x0D;&#x0A;    $INSERT I_Table&#x0D;&#x0A;    $INSERT I_DataTypes&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    GOSUB init      ;* Calls the .FIELDS routine if required.&#x0D;&#x0A;&#x0D;&#x0A;*For people who use neighbours read this:&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;*The whole stuff works that when it comes to core display/INPUT routines we use logical order for F/T/N/R.NEW/R.OLD but when we hand over to application routines&#x0D;&#x0A;*the physical unauth stuff etc. we show the logical orders.&#x0D;&#x0A;*physical order - is what is written on the disk i.e. the position as per the layout&#x0D;&#x0A;*logical order - is what you want to see in the screen and in the programs etc.&#x0D;&#x0A;*V will be the actual number of fields when the control is in core (i.e. MATRIX.ALTER/MATRIX.UPDATE/T.FIELD.INPUT etc.(&#x0D;&#x0A;*V will be the acutal AUDIT.DATE.TIME when the control is in application/unauth.record.write/auth.record.write because we do that V-3,V-9 etc.&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    IF LEN(V$FUNCTION) &lt;= 1 THEN        ;* If we only want the field definition part, length of function is greater than one&#x0D;&#x0A;*&#x0D;&#x0A;* [REFACTOR] - We might be able to not call MATRIX.UPDATE if the we are using the same VERSION in the same&#x0D;&#x0A;* COMPANY - but this is one for the future.&#x0D;&#x0A;        GOSUB ARRANGE.LIST    ;*Arrange the Table.orderFieldList properly to reflect logical order&#x0D;&#x0A;        GOSUB LOGICAL.FIELDS  ;*Go and get the F/N/T etc. in logical order for MATRIX.UPDATE to set T.FIELDNO&#x0D;&#x0A;        CALL MATRIX.UPDATE&#x0D;&#x0A;        GOSUB PHYSICAL.FIELDS ;*Let us go back and reflect the physical order as we are into hooks&#x0D;&#x0A;        GOSUB MAIN.LOOP       ;* The main processing loop&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    Table.lastApplication = Table.name  ;* so that we can check if we re-run the last application.&#x0D;&#x0A;    Table.lastCompany = ID.COMPANY      ;* so we don&apos;t have to call MATRIX.ALTER again if same company and same application&#x0D;&#x0A;    Table.name = &apos;&apos; ;* All done here...&#x0D;&#x0A;&#x0D;&#x0A;*Table.currentFieldPosition = &apos;&apos;     ;* clear the common variables so that MATRIX.UPDATE is done correctly for next template&#x0D;&#x0A;&#x0D;&#x0A;    RETURN          ;* From main program&#x0D;&#x0A;&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*                      S u b r o u t i n e s                            *&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;* &lt;sub&gt;&#x0D;&#x0A;* Initialisation routine. Takes care of some items that were previously in every .FIELDS routine.&#x0D;&#x0A;* &lt;/sub&gt;&#x0D;&#x0A;init:&#x0D;&#x0A;    ERROR.FLAG = 0  ;* Our controlling flag for error processing&#x0D;&#x0A;*&#x0D;&#x0A;* If we are using the newer &quot;Object Based&quot; templates then set the methods array from there&#x0D;&#x0A;*&#x0D;&#x0A;    IF NOT(Table.name) THEN&#x0D;&#x0A;        CALL TableUtil.fromMethods&#x0D;&#x0A;    END&#x0D;&#x0A;    IF NOT(Table.name) THEN&#x0D;&#x0A;        TEXT = &quot;Required initialisation not correct.&quot;&#x0D;&#x0A;        CALL FATAL.ERROR(&quot;THE.TEMPLATE&quot;)&#x0D;&#x0A;    END&#x0D;&#x0A;*&#x0D;&#x0A;* If we are the same application as last time, then we do not need to clear the arrays and reload the field definitions.&#x0D;&#x0A;* This especially helps with data take on and where we have EB.LOOKUPs defined.&#x0D;&#x0A;*&#x0D;&#x0A;* For now we load the fields everytime and do not care about what Table.lastApplication is.&#x0D;&#x0A;*&#x0D;&#x0A;    DIM SAVE.F(C$SYSDIM)&#x0D;&#x0A;    DIM SAVE.N(C$SYSDIM)&#x0D;&#x0A;    DIM SAVE.T(C$SYSDIM)&#x0D;&#x0A;    DIM SAVE.CHECKFILE(C$SYSDIM)&#x0D;&#x0A;    DIM SAVE.CONCATFILE(C$SYSDIM)&#x0D;&#x0A;    DIM SAVE.R.NEW(500)&#x0D;&#x0A;    DIM SAVE.R.NEW.LAST(500)&#x0D;&#x0A;    DIM SAVE.R.OLD(500)&#x0D;&#x0A;&#x0D;&#x0A;    Physical.fieldOrderList = &apos;&apos;&#x0D;&#x0A;    MAT SAVE.R.NEW = &apos;&apos;&#x0D;&#x0A;    MAT SAVE.R.NEW.LAST = &apos;&#x0D;&#x0A;&apos;    MAT SAVE.R.OLD = &apos;&apos;&#x0D;&#x0A;    MAT SAVE.CHECKFILE = &apos;&apos;&#x0D;&#x0A;    MAT SAVE.CONCATFILE = &apos;&apos;&#x0D;&#x0A;    MAT SAVE.F = &apos;&apos;&#x0D;&#x0A;    MAT SAVE.T  = &apos;&apos;&#x0D;&#x0A;    MAT SAVE.N = &apos;&apos;&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    IF Table.name &lt;&gt; &apos;&apos; THEN  ;* if Table.name is set&#x0D;&#x0A;        Table.auditFieldsAdded = &apos;&apos;&#x0D;&#x0A;        Table.currentFieldPosition = &apos;&apos;&#x0D;&#x0A;        Table.validationFields = &apos;&apos;&#x0D;&#x0A;        MAT Table.fieldNeighbourArray = &apos;&apos;&#x0D;&#x0A;        Table.triggerField = &apos;&apos;&#x0D;&#x0A;        Table.noInputFields = &apos;&apos;&#x0D;&#x0A;        Table.inputtableFields = &apos;&apos;&#x0D;&#x0A;        Table.orderedFieldList = &apos;&apos;&#x0D;&#x0A;        Table.defaultFieldNumbers = &apos;&apos;&#x0D;&#x0A;        Table.defaultFieldValues = &apos;&apos;&#x0D;&#x0A;        MAT F = &quot;&quot;&#x0D;&#x0A;        MAT N = &quot;&quot;&#x0D;&#x0A;        MAT T = &quot;&quot;&#x0D;&#x0A;        MAT CHECKFILE = &quot;&quot;&#x0D;&#x0A;        MAT CONCATFILE = &quot;&quot;&#x0D;&#x0A;        ID.CHECKFILE = &quot;&quot;&#x0D;&#x0A;        ID.CONCATFILE = &quot;&quot;&#x0D;&#x0A;&#x0D;&#x0A;        IF NOT(DataType.list) THEN&#x0D;&#x0A;            CALL TableUtil.loadFieldTypes&#x0D;&#x0A;        END&#x0D;&#x0A;&#x0D;&#x0A;        GOSUB DO.INITIALISE   ;* Initialisation&#x0D;&#x0A;        GOSUB DO.FIELDS       ;* Field definitions&#x0D;&#x0A;&#x0D;&#x0A;    END&#x0D;&#x0A;    BROWSER.PREVIEW.ON = (OFS$MESSAGE=&apos;PREVIEW&apos;)  ;* Set when preview icon is clicked from Browser&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;region name= Process Fields&gt;&#x0D;&#x0A;***&#x0D;&#x0A;PROCESS.FIELDS:&#x0D;&#x0A;*   Input or display the record fields.&#x0D;&#x0A;    LOOP&#x0D;&#x0A;        BEGIN CASE&#x0D;&#x0A;        CASE Table.stereotype = &apos;T&apos;     ;* Table applications go a completely different route!&#x0D;&#x0A;            CALL TABLE.DISPLAY&#x0D;&#x0A;*&#x0D;&#x0A;**  for actions we don&apos;t need a display at all&#x0D;&#x0A;**  Should not call field display at all&#x0D;&#x0A;*&#x0D;&#x0A;        CASE V$ACTION&#x0D;&#x0A;            MESSAGE = &quot;METHOD&quot;&#x0D;&#x0A;        CASE SCREEN.MODE EQ &apos;MULTI&apos;&#x0D;&#x0A;            IF FILE.TYPE EQ &apos;I&apos; THEN&#x0D;&#x0A;                CALL FIELD.MULTI.INPUT&#x0D;&#x0A;            END ELSE&#x0D;&#x0A;                CALL FIELD.MULTI.DISPLAY&#x0D;&#x0A;            END&#x0D;&#x0A;        CASE OTHERWISE&#x0D;&#x0A;            IF FILE.TYPE EQ &apos;I&apos; THEN&#x0D;&#x0A;                CALL FIELD.INPUT&#x0D;&#x0A;            END ELSE&#x0D;&#x0A;                CALL FIELD.DISPLAY&#x0D;&#x0A;            END&#x0D;&#x0A;        END CASE&#x0D;&#x0A;    WHILE NOT(MESSAGE)&#x0D;&#x0A;&#x0D;&#x0A;        IF T.SEQU NE &apos;&apos; THEN&#x0D;&#x0A;            T.SEQU&lt;-1&gt; = A + 1&#x0D;&#x0A;        END&#x0D;&#x0A;&#x0D;&#x0A;    REPEAT&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*** &lt;region name= Process Message&gt;&#x0D;&#x0A;***&#x0D;&#x0A;PROCESS.MESSAGE:&#x0D;&#x0A;* Processing after exiting from field input - i.e. at commit time&#x0D;&#x0A;&#x0D;&#x0A;    IF BROWSER.PREVIEW.ON THEN          ;* when Delivery preview option is clicked&#x0D;&#x0A;        MESSAGE = &quot;PREVIEW&quot;   ;* Set Message to PREVIEW&#x0D;&#x0A;        BROWSER.PREVIEW.ON = 0          ;* Do it once&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    IF MESSAGE = &apos;DEFAULT&apos; THEN         ;* Default processing invokes crossval and then comes back&#x0D;&#x0A;        MESSAGE = &apos;ERROR&apos;     ;* Force the processing back&#x0D;&#x0A;        IF V$FUNCTION &lt;&gt; &apos;D&apos; AND V$FUNCTION &lt;&gt; &apos;R&apos; THEN&#x0D;&#x0A;            GOSUB DO.DEFAULT&#x0D;&#x0A;        END&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    IF MESSAGE = &apos;PREVIEW&apos; THEN         ;* Delivery preview&#x0D;&#x0A;        MESSAGE = &apos;ERROR&apos;     ;* Force the processing back&#x0D;&#x0A;        IF V$FUNCTION &lt;&gt; &apos;D&apos; AND V$FUNCTION &lt;&gt; &apos;R&apos; THEN&#x0D;&#x0A;            GOSUB DO.VALIDATE&#x0D;&#x0A;            IF NOT(ERROR.FLAG) THEN&#x0D;&#x0A;                GOSUB DO.PREVIEW        ;* Activate print preview&#x0D;&#x0A;            END&#x0D;&#x0A;        END&#x0D;&#x0A;    END&#x0D;&#x0A;*&#x0D;&#x0A;* Commit processing on input functions (I,C,D,R etc.)&#x0D;&#x0A;*&#x0D;&#x0A;** Actions could require overrides&#x0D;&#x0A;** DO.PROCESS should actually invoke the main action process&#x0D;&#x0A;*&#x0D;&#x0A;    IF MESSAGE = &apos;METHOD&apos; THEN&#x0D;&#x0A;        GOSUB DO.ACTION&#x0D;&#x0A;        CALL ACTION.RECORD.WRITE(ERROR.FLAG)&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    IF MESSAGE EQ &apos;VAL&apos;  THEN&#x0D;&#x0A;        MESSAGE = &apos;&apos;&#x0D;&#x0A;        IF NOT(V$ACTION) THEN&#x0D;&#x0A;            GOSUB DO.VALIDATE ;* Special Cross Validation&#x0D;&#x0A;            IF NOT(ERROR.FLAG) AND V$FUNCTION NE &apos;D&apos; AND V$FUNCTION NE &apos;R&apos; THEN&#x0D;&#x0A;                GOSUB DO.OVERRIDES&#x0D;&#x0A;            END&#x0D;&#x0A;        END&#x0D;&#x0A;        IF NOT(ERROR.FLAG) THEN&#x0D;&#x0A;            GOSUB DO.PROCESS  ;* Special Processing before unauth write&#x0D;&#x0A;        END&#x0D;&#x0A;        IF NOT(ERROR.FLAG) THEN&#x0D;&#x0A;            IF Table.stereotype EQ &apos;W&apos; THEN&#x0D;&#x0A;* For input of type W, there is not $NAU file so we cannot write to it.&#x0D;&#x0A;* The write will be to the live file.&#x0D;&#x0A;                IF NOT(OFS.VAL.ONLY) THEN&#x0D;&#x0A;*... Need this to stop writing to disk on verify.&#x0D;&#x0A;                    MESSAGE = &apos;AUT&apos;&#x0D;&#x0A;                END&#x0D;&#x0A;            END ELSE&#x0D;&#x0A;                CALL UNAUTH.RECORD.WRITE&#x0D;&#x0A;            END&#x0D;&#x0A;        END&#x0D;&#x0A;    END&#x0D;&#x0A;*&#x0D;&#x0A;* And now for authorisation and verification&#x0D;&#x0A;*&#x0D;&#x0A;    IF MESSAGE EQ &apos;AUT&apos; OR MESSAGE EQ &apos;VER&apos; THEN&#x0D;&#x0A;        IF NOT(V$ACTION) THEN&#x0D;&#x0A;            GOSUB DO.VALIDATE ;* Special Cross Validation&#x0D;&#x0A;        END&#x0D;&#x0A;        IF NOT(ERROR.FLAG) THEN&#x0D;&#x0A;            GOSUB DO.AUTHORISE          ;* Special Processing before write&#x0D;&#x0A;        END&#x0D;&#x0A;        IF NOT(ERROR.FLAG) THEN&#x0D;&#x0A;            CALL AUTH.RECORD.WRITE&#x0D;&#x0A;        END&#x0D;&#x0A;        IF NOT(ERROR.FLAG) AND V$FUNCTION = &apos;V&apos; THEN        ;* Verify the record&#x0D;&#x0A;            GOSUB DO.RUN      ;* update using RUN&#x0D;&#x0A;        END&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*** &lt;region name= Id&gt;&#x0D;&#x0A;***&#x0D;&#x0A;DO.ID:&#x0D;&#x0A;* Validation and changes of the ID entered.  Set ERROR to 1 if in error.&#x0D;&#x0A;    THE.PREFIX = Table.idPrefix&#x0D;&#x0A;    IF THE.PREFIX THEN&#x0D;&#x0A;        CALL EB.FORMAT.ID(THE.PREFIX)&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    IF E THEN&#x0D;&#x0A;        CALL ERR&#x0D;&#x0A;        ERROR.FLAG = 1&#x0D;&#x0A;    END ELSE&#x0D;&#x0A;        routineExtension = &quot;.ID&quot;&#x0D;&#x0A;        GOSUB CALL.ROUTINE&#x0D;&#x0A;    END&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*** &lt;region name= Record&gt;&#x0D;&#x0A;***&#x0D;&#x0A;DO.RECORD:&#x0D;&#x0A;* Validation and changes of the record.&#x0D;&#x0A;* Determine if we are the first time through - browser invokes the template&#x0D;&#x0A;* several times so check that we really are the first time in&#x0D;&#x0A;    firstTime = 0&#x0D;&#x0A;&#x0D;&#x0A;    BEGIN CASE&#x0D;&#x0A;    CASE OFS$SOURCE.REC&lt;OFS.SRC.SOURCE.TYPE&gt; = &apos;SESSION&apos;&#x0D;&#x0A;        IF OFS$STATUS&lt;STAT.FLAG.FIRST.TIME&gt; AND  R.NEW(V-8) =&apos;&apos; THEN&#x0D;&#x0A;            firstTime = 1&#x0D;&#x0A;        END&#x0D;&#x0A;    CASE OTHERWISE&#x0D;&#x0A;        IF R.NEW(V-8) = &apos;&apos; THEN&#x0D;&#x0A;            firstTime = 1&#x0D;&#x0A;        END&#x0D;&#x0A;    END CASE&#x0D;&#x0A;*&#x0D;&#x0A;* If there are any default field values set then add them into&#x0D;&#x0A;* R.NEW here - but only if we are the first time through&#x0D;&#x0A;*&#x0D;&#x0A;    IF Table.defaultFieldNumbers AND firstTime THEN&#x0D;&#x0A;        i=0&#x0D;&#x0A;        LOOP&#x0D;&#x0A;            i+=1&#x0D;&#x0A;        WHILE Table.defaultFieldNumbers&lt;i&gt;&#x0D;&#x0A;            fno = Table.defaultFieldNumbers&lt;i&gt;&#x0D;&#x0A;            IF R.NEW(fno) = &apos;&apos; THEN     ;* Just in case...&#x0D;&#x0A;                R.NEW(fno) = Table.defaultFieldValues&lt;i&gt;&#x0D;&#x0A;            END&#x0D;&#x0A;        REPEAT&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    IF Table.triggerField THEN&#x0D;&#x0A;        GOSUB PROCESS.OPERATION.FIELDS  ;*&#x0D;&#x0A;    END&#x0D;&#x0A;    routineExtension = &quot;.RECORD&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*** &lt;region name= validation&gt;&#x0D;&#x0A;***&#x0D;&#x0A;DO.VALIDATE:&#x0D;&#x0A;*&#x0D;&#x0A;    ERROR.FLAG = &apos;&apos;&#x0D;&#x0A;    ETEXT = &apos;&apos;&#x0D;&#x0A;    TEXT = &apos;&apos;&#x0D;&#x0A;*&#x0D;&#x0A;    uniqueFieldList = Table.validationFields&lt;1&gt;&#x0D;&#x0A;    noNullsFieldList = Table.validationFields&lt;2&gt;&#x0D;&#x0A;    LOOP&#x0D;&#x0A;        REMOVE field FROM uniqueFieldList SETTING fieldMark&#x0D;&#x0A;    WHILE field : fieldMark&#x0D;&#x0A;        AF = field&#x0D;&#x0A;        CALL DUP&#x0D;&#x0A;    REPEAT&#x0D;&#x0A;&#x0D;&#x0A;    LOOP&#x0D;&#x0A;        REMOVE field FROM noNullsFieldList SETTING fieldMark&#x0D;&#x0A;    WHILE field : fieldMark&#x0D;&#x0A;        AF = field&#x0D;&#x0A;        CALL FT.NULLS.CHK&#x0D;&#x0A;    REPEAT&#x0D;&#x0A;&#x0D;&#x0A;    routineExtension = &quot;.VALIDATE&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;*&#x0D;&#x0A;* If END.ERROR has been set then a cross validation error has occurred&#x0D;&#x0A;*&#x0D;&#x0A;    IF END.ERROR THEN&#x0D;&#x0A;        A = 1&#x0D;&#x0A;        LOOP&#x0D;&#x0A;        UNTIL T.ETEXT&lt;A&gt; &lt;&gt; &quot;&quot;&#x0D;&#x0A;            A+=1&#x0D;&#x0A;        REPEAT&#x0D;&#x0A;        T.SEQU = &quot;D&quot;&#x0D;&#x0A;        T.SEQU&lt;-1&gt; = A&#x0D;&#x0A;        ERROR.FLAG = 1&#x0D;&#x0A;        MESSAGE = &apos;ERROR&apos;&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    RETURN          ;* Back to field input via UNAUTH.RECORD.WRITE&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Overrides&gt;&#x0D;&#x0A;***&#x0D;&#x0A;DO.OVERRIDES:&#x0D;&#x0A;ETEXT = &apos;&apos;&#x0D;&#x0A;    TEXT = &apos;&apos;&#x0D;&#x0A;    routineExtension = &quot;.OVERRIDES&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;*&#x0D;&#x0A;    IF TEXT = &quot;NO&quot; THEN       ;* Said NO to override&#x0D;&#x0A;        ERROR.FLAG = 1&#x0D;&#x0A;        MESSAGE = &quot;ERROR&quot;     ;* Back to field input&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= Preview&gt;&#x0D;&#x0A;*** &lt;desc&gt;Run the Preview processing&lt;/desc&gt;&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;DO.PREVIEW:&#x0D;&#x0A;    routineExtension = &quot;.PREVIEW&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*** &lt;region name= Process&gt;&#x0D;&#x0A;*** &lt;desc&gt;Run the Process code&lt;/desc&gt;&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;DO.PROCESS:&#x0D;&#x0A;*&#x0D;&#x0A;*  Contract processing code should reside here.&#x0D;&#x0A;*&#x0D;&#x0A;    routineExtension = &quot;.PROCESS&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;&#x0D;&#x0A;    IF TEXT = &quot;NO&quot; THEN       ;* Said No to override&#x0D;&#x0A;        CALL TRANSACTION.ABORT          ;* Cancel current transaction&#x0D;&#x0A;        ERROR.FLAG = 1&#x0D;&#x0A;        MESSAGE = &quot;ERROR&quot;     ;* Back to field input&#x0D;&#x0A;        RETURN&#x0D;&#x0A;    END&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= Authorise&gt;&#x0D;&#x0A;*** &lt;desc&gt;Run the Authorise processing&lt;/desc&gt;&#x0D;&#x0A;DO.AUTHORISE:&#x0D;&#x0A;    routineExtension = &quot;.AUTHORISE&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*************************************************************************&#x0D;&#x0A;*** &lt;region name= Check Function is Valid&gt;&#x0D;&#x0A;***&#x0D;&#x0A;DO.FUNCTION:&#x0D;&#x0A;* Validation of function entered.&#x0D;&#x0A;*&#x0D;&#x0A;    CHECK.VERIFY = &apos;&apos;         ;*flag to check we need to allow verify function for this application&#x0D;&#x0A;    CALL OS.GET.VERIFY.APPS(CHECK.VERIFY)         ;* routine which sets the flag to allow &quot;V&quot; function for this application&#x0D;&#x0A;&#x0D;&#x0A;    IF CHECK.VERIFY ELSE      ;* if the routine approves the &quot;V&quot; function, no need of any other validations&#x0D;&#x0A;        IF INDEX(V$FUNCTION,&apos;V&apos;,1) AND Table.stereotype &lt;&gt; &apos;W&apos; THEN&#x0D;&#x0A;            E = &apos;EB.RTN.FUNT.NOT.ALLOWED.APP&apos;&#x0D;&#x0A;        END&#x0D;&#x0A;    END&#x0D;&#x0A;* If we have the property BLOCKED.FUNCTIONS set, THEN throw an error.&#x0D;&#x0A;    IF INDEX(Table.blockedFunctions,V$FUNCTION,1) AND Table.blockedFunctions THEN&#x0D;&#x0A;        E = &apos;EB.RTN.FUNT.NOT.ALLOWED.APP&apos;&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    IF E THEN&#x0D;&#x0A;        ERROR.FLAG = 1        ;* Need to signal the problem&#x0D;&#x0A;        CALL ERR&#x0D;&#x0A;    END ELSE&#x0D;&#x0A;        routineExtension = &quot;.FUNCTION&quot;  ;* Set E if there is an error&#x0D;&#x0A;        GOSUB CALL.ROUTINE&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    IF ERROR.FLAG THEN        ;* ERROR.FLAG is checked since E is cleared after callling ERR&#x0D;&#x0A;        V$FUNCTION = &apos;&apos;       ;* Set FUNCTION to null if in error&#x0D;&#x0A;    END&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= CALL.ROUTINE&gt;&#x0D;&#x0A;CALL.ROUTINE:&#x0D;&#x0A;*** &lt;desc&gt;Invoke the routine&lt;/desc&gt;&#x0D;&#x0A;* Check to see if the routine exists. If it does, then call it.&#x0D;&#x0A;*&#x0D;&#x0A;    routineName = Table.name : routineExtension&#x0D;&#x0A;    routineExists = &apos;&apos;&#x0D;&#x0A;    CALL CHECK.ROUTINE.EXIST(routineName, routineExists, &apos;&apos;)&#x0D;&#x0A;    IF routineExists THEN&#x0D;&#x0A;        ERROR.FLAG = 0&#x0D;&#x0A;        E = &apos;&apos;&#x0D;&#x0A;        CALL @routineName&#x0D;&#x0A;        IF E THEN&#x0D;&#x0A;            ERROR.FLAG = 1&#x0D;&#x0A;            CALL ERR&#x0D;&#x0A;        END&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;MAIN.LOOP:&#x0D;&#x0A;*** &lt;desc&gt;The main processing loop&lt;/desc&gt;&#x0D;&#x0A;    LOOP&#x0D;&#x0A;&#x0D;&#x0A;        CALL RECORDID.INPUT&#x0D;&#x0A;        GOSUB ARRANGE.LIST&#x0D;&#x0A;&#x0D;&#x0A;    UNTIL (MESSAGE EQ &apos;RET&apos;)&#x0D;&#x0A;&#x0D;&#x0A;        ERROR.FLAG = &apos;&apos;&#x0D;&#x0A;&#x0D;&#x0A;        IF MESSAGE EQ &apos;NEW FUNCTION&apos; THEN&#x0D;&#x0A;&#x0D;&#x0A;            GOSUB DO.FUNCTION ;* Special Editing of Function&#x0D;&#x0A;&#x0D;&#x0A;            IF V$FUNCTION EQ &apos;E&apos; OR V$FUNCTION EQ &apos;L&apos; THEN&#x0D;&#x0A;                CALL FUNCTION.DISPLAY&#x0D;&#x0A;                V$FUNCTION = &apos;&apos;&#x0D;&#x0A;            END&#x0D;&#x0A;            IF V$FUNCTION EQ &apos;V&apos; THEN&#x0D;&#x0A;                FILE.TYPE = &quot;I&quot;&#x0D;&#x0A;            END&#x0D;&#x0A;&#x0D;&#x0A;*&#x0D;&#x0A;** For the M Function get the method name&#x0D;&#x0A;*&#x0D;&#x0A;            IF V$FUNCTION = &quot;M&quot; THEN&#x0D;&#x0A;                GOSUB GET.ACTION&#x0D;&#x0A;            END ELSE&#x0D;&#x0A;                V$ACTION = &apos;&apos; ;* Action only valid for M function&#x0D;&#x0A;            END&#x0D;&#x0A;&#x0D;&#x0A;        END ELSE&#x0D;&#x0A;&#x0D;&#x0A;            GOSUB DO.ID       ;* Special Editing of ID&#x0D;&#x0A;            IF NOT(ERROR.FLAG) THEN&#x0D;&#x0A;                GOSUB PROCESS.RECORD    ;*&#x0D;&#x0A;                GOSUB PHYSICAL.FIELDS   ;*Go back and take the physical order&#x0D;&#x0A;            END&#x0D;&#x0A;        END&#x0D;&#x0A;&#x0D;&#x0A;    REPEAT&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= PROCESS.RECORD&gt;&#x0D;&#x0A;PROCESS.RECORD:&#x0D;&#x0A;***&#x0D;&#x0A;    CALL RECORD.READ&#x0D;&#x0A;    IF MESSAGE NE &apos;REPEAT&apos; THEN&#x0D;&#x0A;        GOSUB DO.RECORD       ;* Special Editing of Record&#x0D;&#x0A;        GOSUB LOGICAL.FIELDS  ;*Now user interaction is over we are into display and screen go to logical F&#x0D;&#x0A;        GOSUB LOGICAL.RECORD  ;*The R.NEW should match the logical F/T as otherwise OVERRIDE will be the first field!!!!&#x0D;&#x0A;        CALL MATRIX.ALTER&#x0D;&#x0A;        IF NOT(ERROR.FLAG) THEN&#x0D;&#x0A;            LOOP&#x0D;&#x0A;                GOSUB PROCESS.FIELDS    ;* ) For Input&#x0D;&#x0A;                GOSUB PHYSICAL.FIELDS   ;*User interaction/display all are over am into application so go to physical order&#x0D;&#x0A;                GOSUB PHYSICAL.RECORD   ;*Convert it to physical order in terms of record&#x0D;&#x0A;                GOSUB PROCESS.MESSAGE   ;* ) Applications&#x0D;&#x0A;                GOSUB LOGICAL.FIELDS    ;*Error/override/just validation now you may go to screen go back to LOGICAL.ORDER&#x0D;&#x0A;                GOSUB LOGICAL.RECORD    ;*Oh sorry one last time go back to LOGICAL.ORDER&#x0D;&#x0A;            WHILE (MESSAGE EQ &apos;ERROR&apos;) REPEAT&#x0D;&#x0A;        END&#x0D;&#x0A;    END&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Utility&gt;&#x0D;&#x0A;*** &lt;desc&gt;Invoke the work routine&lt;/desc&gt;&#x0D;&#x0A;DO.RUN:&#x0D;&#x0A;    routineExtension = &quot;.RUN&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Default&gt;&#x0D;&#x0A;*** &lt;desc&gt;Invoke the work routine&lt;/desc&gt;&#x0D;&#x0A;DO.DEFAULT:&#x0D;&#x0A;    routineExtension = &quot;.DEFAULT&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Process the operation&gt;&#x0D;&#x0A;PROCESS.OPERATION.FIELDS:&#x0D;&#x0A;***&#x0D;&#x0A;* Here we work out if we have any operation trigger fields set...&#x0D;&#x0A;    TRIGGER.FIELD = Table.triggerField&#x0D;&#x0A;    TRIGGER.VALUE = R.NEW(TRIGGER.FIELD)&lt;1,1,1&gt;&#x0D;&#x0A;    IF TRIGGER.VALUE &lt;&gt; &apos;&apos; THEN&#x0D;&#x0A;        SEARCH.LIST = T(TRIGGER.FIELD)&lt;2&gt;&#x0D;&#x0A;        CONVERT &apos;_&apos; TO FM IN SEARCH.LIST&#x0D;&#x0A;        LOCATE TRIGGER.VALUE IN SEARCH.LIST&lt;1&gt; SETTING TRIGGER.INDEX ELSE TRIGGER.INDEX = 0         ;* Shouldnt be 0!&#x0D;&#x0A;*&#x0D;&#x0A;* Loop through the T array and make the fields input / noinput&#x0D;&#x0A;* Either the Table.inputtableFields array or the Table.noInputFields array may be populated, but not both.&#x0D;&#x0A;* If both are set, ignore Table.noInputFields.&#x0D;&#x0A;*&#x0D;&#x0A;        DEFAULT.SETTING = &apos;&apos;&#x0D;&#x0A;        CHANGED.SETTING = &apos;&apos;&#x0D;&#x0A;        FIELD.LIST = &apos;&apos;&#x0D;&#x0A;        IF Table.noInputFields&lt;TRIGGER.INDEX&gt; THEN&#x0D;&#x0A;            CHANGED.SETTING = &apos;NOINPUT&apos;&#x0D;&#x0A;            FIELD.LIST = Table.noInputFields&lt;TRIGGER.INDEX&gt;&#x0D;&#x0A;        END&#x0D;&#x0A;        IF Table.inputtableFields&lt;TRIGGER.INDEX&gt; THEN&#x0D;&#x0A;            DEFAULT.SETTING = &apos;NOINPUT&apos;&#x0D;&#x0A;            FIELD.LIST = Table.inputtableFields&lt;TRIGGER.INDEX&gt;&#x0D;&#x0A;        END&#x0D;&#x0A;*&#x0D;&#x0A;* First setting all the items to the default setting&#x0D;&#x0A;* If we are processing a NOINPUTS list, then any field that is already defined as&#x0D;&#x0A;* NOINPUT, NOCHANGE, etc. will retain that definition to prevent reserved fields,&#x0D;&#x0A;* etc. being made inputtable!&#x0D;&#x0A;*&#x0D;&#x0A;        FOR I = 1 TO V - 9&#x0D;&#x0A;            IF NOT(CHANGED.SETTING = &apos;NOINPUT&apos; AND T(I)&lt;3&gt;) THEN&#x0D;&#x0A;                T(I)&lt;3&gt; = DEFAULT.SETTING&#x0D;&#x0A;            END&#x0D;&#x0A;        NEXT I&#x0D;&#x0A;*&#x0D;&#x0A;* And then change the items to the new settings for the specified fields...&#x0D;&#x0A;*&#x0D;&#x0A;        LOOP&#x0D;&#x0A;            REMOVE FIELD.ID FROM FIELD.LIST SETTING FIELD.MARK&#x0D;&#x0A;        WHILE FIELD.ID : FIELD.MARK&#x0D;&#x0A;            T(FIELD.ID)&lt;3&gt; = CHANGED.SETTING&#x0D;&#x0A;        REPEAT&#x0D;&#x0A;    END&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= DO.FIELDS&gt;&#x0D;&#x0A;DO.FIELDS:&#x0D;&#x0A;*** &lt;desc&gt;Field definitions&lt;/desc&gt;&#x0D;&#x0A;    routineExtension = &quot;.FIELDS&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= DO.INITIALISE&gt;&#x0D;&#x0A;DO.INITIALISE:&#x0D;&#x0A;*** &lt;desc&gt;Initialisation&lt;/desc&gt;&#x0D;&#x0A;    routineExtension = &quot;.INITIALISE&quot;&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Action&gt;&#x0D;&#x0A;***&#x0D;&#x0A;DO.ACTION:&#x0D;&#x0A;*&#x0D;&#x0A;** Call the ACTION routine&#x0D;&#x0A;*&#x0D;&#x0A;    routineExtension = &quot;.&quot;:V$ACTION&#x0D;&#x0A;    GOSUB CALL.ROUTINE&#x0D;&#x0A;    IF END.ERROR THEN&#x0D;&#x0A;        ERROR.FLAG = 1&#x0D;&#x0A;    END&#x0D;&#x0A;    IF TEXT = &quot;NO&quot; THEN&#x0D;&#x0A;        ERROR.FLAG = 1&#x0D;&#x0A;    END&#x0D;&#x0A;*&#x0D;&#x0A;    RETURN          ;* Back to field input via UNAUTH.RECORD.WRITE&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Get Action&gt;&#x0D;&#x0A;*** &lt;desc&gt;Get the action details&lt;/desc&gt;&#x0D;&#x0A;GET.ACTION:&#x0D;&#x0A;*&#x0D;&#x0A;    LOOP&#x0D;&#x0A;        CALL EB.GET.ACTION&#x0D;&#x0A;    WHILE MESSAGE = &apos;ERROR&apos;&#x0D;&#x0A;        IF E THEN&#x0D;&#x0A;            ERROR.FLAG = 1&#x0D;&#x0A;            CALL ERR&#x0D;&#x0A;        END&#x0D;&#x0A;    REPEAT&#x0D;&#x0A;*&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;LOGICAL.FIELDS:&#x0D;&#x0A;&#x0D;&#x0A;    IF NEIGHBOUR.TABLE EQ &apos;&apos; THEN       ;*This is not a new style template so why this botheration&#x0D;&#x0A;        RETURN      ;*Go back and live in the world of Beatles and BoneyM&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    FOR idx = 1 TO upperLimit ;*The total field length&#x0D;&#x0A;        LOCATE idx IN Table.orderedFieldList&lt;1&gt; SETTING POS.FOUND ELSE          ;*What is the position in the logical order&#x0D;&#x0A;            CONTINUE          ;*Odd but what to do life has to carry on&#x0D;&#x0A;        END&#x0D;&#x0A;        Physical.fieldOrderList&lt;idx&gt; = POS.FOUND  ;*A new array to store the physical order (should be 1 2 3 4 5  but have it)&#x0D;&#x0A;        SAVE.F(POS.FOUND) = F(idx)      ;*F in a logical order&#x0D;&#x0A;       SAVE.T(POS.FOUND) = T(idx)      ;*T in a logical order&#x0D;&#x0A;        SAVE.N(POS.FOUND) = N(idx)      ;*N in a logical order&#x0D;&#x0A;        SAVE.CHECKFILE(POS.FOUND) = CHECKFILE(idx)          ;*Checkfile in a logical order&#x0D;&#x0A;        SAVE.CONCATFILE(POS.FOUND) = CONCATFILE(idx)        ;*CONCATFILE (who is using this still!!!) in a logical order&#x0D;&#x0A;    NEXT idx        ;*Next field&#x0D;&#x0A;    MAT F = MAT SAVE.F        ;*Logical F is ready&#x0D;&#x0A;    MAT T = MAT SAVE.T        ;*Logical T is ready&#x0D;&#x0A;    MAT N = MAT SAVE.N        ;*N follows&#x0D;&#x0A;    MAT CHECKFILE = MAT SAVE.CHECKFILE  ;*CHECKFILE just sneaks in&#x0D;&#x0A;    MAT CONCATFILE = MAT SAVE.CONCATFILE          ;*Contactfile mmmm let us also make it logical&#x0D;&#x0A;    SAVE.V = V      ;*Save the original V i.e the position of AUDIT.DATE.TIME physically&#x0D;&#x0A;    V = upperLimit  ;*The revised V whenever we are in logical order&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-------------------------------------------------------------------------------------------&#x0D;&#x0A;LOGICAL.RECORD:&#x0D;&#x0A;&#x0D;&#x0A;    IF NEIGHBOUR.TABLE EQ &apos;&apos; THEN       ;*This is a template that does not use neighbours&#x0D;&#x0A;        RETURN      ;*Dont do much am not a much required table that goes through changes&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    FOR idx = 1 TO upperLimit ;*The whole field length&#x0D;&#x0A;        LOCATE idx IN Table.orderedFieldList&lt;1&gt; SETTING POS.FOUND ELSE          ;*Find in the logical order&#x0D;&#x0A;            CONTINUE          ;*Is something wrong terribly&#x0D;&#x0A;        END&#x0D;&#x0A;        Physical.fieldOrderList&lt;idx&gt; = POS.FOUND  ;*build this again&#x0D;&#x0A;        SAVE.R.NEW(POS.FOUND) = R.NEW(idx)        ;*The current record&#x0D;&#x0A;        SAVE.R.NEW.LAST(POS.FOUND) = R.NEW.LAST(idx)        ;*The last unauth one&#x0D;&#x0A;        SAVE.R.OLD(POS.FOUND) = R.OLD(POS.FOUND)  ;*The last authorized one&#x0D;&#x0A;    NEXT idx        ;*Next one&#x0D;&#x0A;    MAT R.NEW = MAT SAVE.R.NEW          ;*New record for display/input/viewing/printout etc.etc.&#x0D;&#x0A;    MAT R.NEW.LAST = MAT SAVE.R.NEW.LAST          ;*The last unauthorised one&#x0D;&#x0A;    MAT R.OLD = MAT SAVE.R.OLD          ;*Old one&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*----------------------------------------------------------------------------------------------------&#x0D;&#x0A;PHYSICAL.FIELDS:&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    IF NEIGHBOUR.TABLE EQ &apos;&apos; THEN       ;*I  still think that we are in the world of shillings&#x0D;&#x0A;        RETURN      ;*Go back&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    FOR idx = 1 TO upperLimit ;*The whole limit&#x0D;&#x0A;        LOCATE idx IN Physical.fieldOrderList&lt;1&gt; SETTING POS.FOUND ELSE         ;*The physical position&#x0D;&#x0A;            CONTINUE&#x0D;&#x0A;        END&#x0D;&#x0A;        SAVE.F(POS.FOUND) = F(idx)      ;*Getting physical... just the F&#x0D;&#x0A;        SAVE.T(POS.FOUND) = T(idx)      ;*The T is being restored to physical position&#x0D;&#x0A;        SAVE.N(POS.FOUND) = N(idx)      ;*The N is being restored to physical position&#x0D;&#x0A;        SAVE.CHECKFILE(POS.FOUND) = CHECKFILE(idx)          ;*Checkfiles&#x0D;&#x0A;        SAVE.CONCATFILE(POS.FOUND) = CONCATFILE(idx)        ;*And the concat files&#x0D;&#x0A;    NEXT idx&#x0D;&#x0A;    MAT F = MAT SAVE.F        ;*let me be my original self&#x0D;&#x0A;    MAT T = MAT SAVE.T        ;*yes right NOINPUT will be set the application coders&#x0D;&#x0A;    MAT N = MAT SAVE.N        ;*Will someone change it but still&#x0D;&#x0A;    MAT CHECKFILE = MAT SAVE.CHECKFILE  ;*The checks&#x0D;&#x0A;    MAT CONCATFILE = MAT SAVE.CONCATFILE          ;*Concats&#x0D;&#x0A;    V = SAVE.V      ;*Now I am telling the world where my audit position is in case they want to do V-9,V-3 etc&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*------------------------------------------------------------------------------------------------------------------------------&#x0D;&#x0A;PHYSICAL.RECORD:&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    IF NEIGHBOUR.TABLE EQ &apos;&apos; THEN       ;*old style templates&#x0D;&#x0A;        RETURN      ;*go and be in maintenance mode&#x0D;&#x0A;    END&#x0D;&#x0A;    FOR idx = 1 TO upperLimit ;*The final limit&#x0D;&#x0A;        LOCATE idx IN Physical.fieldOrderList&lt;1&gt; SETTING POS.FOUND ELSE         ;*Actual physical location&#x0D;&#x0A;            CONTINUE          ;*are you cheating&#x0D;&#x0A;        END&#x0D;&#x0A;        SAVE.R.NEW(POS.FOUND) = R.NEW(idx)        ;*The physical position so that people can write crossvals&#x0D;&#x0A;        SAVE.R.NEW.LAST(POS.FOUND) = R.NEW.LAST(idx)        ;*The logical position&#x0D;&#x0A;        SAVE.R.OLD(POS.FOUND) = R.OLD(POS.FOUND)  ;*The logical oldie...&#x0D;&#x0A;    NEXT idx&#x0D;&#x0A;    MAT R.NEW = MAT SAVE.R.NEW          ;*The physical&#x0D;&#x0A;    MAT R.NEW.LAST = MAT SAVE.R.NEW.LAST          ;*The one that is on the disk&#x0D;&#x0A;    MAT R.OLD = MAT SAVE.R.OLD          ;*The one that will takes us towards next century&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-------------------------------------------------------------------------------------------------------------&#x0D;&#x0A;ARRANGE.LIST:&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    Table.orderedFieldList = &apos;&apos;&#x0D;&#x0A;    IF Table.currentFieldPosition GT V THEN       ;*More fields than V&#x0D;&#x0A;        upperLimit = Table.currentFieldPosition   ;*This is the maximum length&#x0D;&#x0A;    END ELSE&#x0D;&#x0A;        upperLimit = V        ;*Old style V&#x0D;&#x0A;    END&#x0D;&#x0A;    NEIGHBOUR.TABLE = &apos;&apos;&#x0D;&#x0A;    auditFieldList = &apos;&apos;&#x0D;&#x0A;    FOR i = 1 TO upperLimit&#x0D;&#x0A;        neighbour = Table.fieldNeighbourArray(i)  ;*Are we having neighbours&#x0D;&#x0A;        BEGIN CASE&#x0D;&#x0A;        CASE i &gt;= V-8 AND i &lt;= V        ;* we have added the audit fields and it&apos;s a audit field&#x0D;&#x0A;            auditFieldList&lt;-1&gt; = i&#x0D;&#x0A;        CASE neighbour&#x0D;&#x0A;*&#x0D;&#x0A;* Allow for nested neighbours....&#x0D;&#x0A;*&#x0D;&#x0A;            NEIGHBOUR.TABLE = 1         ;*Set this flag&#x0D;&#x0A;            LOOP&#x0D;&#x0A;            UNTIL Table.fieldNeighbourArray(neighbour) = &apos;&apos;&#x0D;&#x0A;                neighbour = Table.fieldNeighbourArray(neighbour)&#x0D;&#x0A;            REPEAT&#x0D;&#x0A;            Table.orderedFieldList&lt;neighbour&gt;:= &apos;!&apos; : i     ;*Get a ordered list&#x0D;&#x0A;        CASE OTHERWISE        ;*No neighbours&#x0D;&#x0A;            Table.orderedFieldList&lt;-1&gt; = i        ;*Same position&#x0D;&#x0A;        END CASE&#x0D;&#x0A;    NEXT i&#x0D;&#x0A;    CONVERT &apos;!&apos; TO FM IN Table.orderedFieldList   ;*Convert to field markers&#x0D;&#x0A;&#x0D;&#x0A;    Table.orderedFieldList := FM : auditFieldList ;*And the audits&#x0D;&#x0A;*&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*---------------------------------------------------------------------------------------------------------&#x0D;&#x0A;END&#x0D;&#x0A; &#x0D;&#x0A; &#x0D;&#x0A;"/>
<Property key="local.user.password" value=""/>
<Property key="t24.template.system.Table.addStatementNumbersField.v5" value="t24.template.system.Table.addStatementNumbersField.v5&lt;&lt;NR&gt;&gt;Table.addStatementNumbersField&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;Rating&gt;-10&lt;/Rating&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addStatementNumbersField(neighbour) &#x0D;&#x0A;* &lt;doc&gt; &#x0D;&#x0A;* Adds a statement numbers field to the application&#x0D;&#x0A; * @author tcoleman@temenos.com &#x0D;&#x0A;* @public Application Development &#x0D;&#x0A;* @package core.infra.contract &#x0D;&#x0A;* @param neighbour (optional) Reserved for future used.&#x0D;&#x0A; * &lt;/doc&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; $INSERT I_COMMON &#x0D;&#x0A;$INSERT I_EQUATE &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;  &#x0D;&#x0A;   GOSUB setFieldType&#x0D;&#x0A;          &#x0D;&#x0A;   CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;     &#x0D;&#x0A;   RETURN&#x0D;&#x0A;  &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; setFieldType: &#x0D;&#x0A;   fieldName = &quot;XX.STMT.NOS&quot;&#x0D;&#x0A;    nArrayItem = &quot;35&quot; &#x0D;&#x0A;   tArrayItem = &quot;&quot; &#x0D;&#x0A;   tArrayItem&lt;3&gt; = &apos;NOINPUT&apos;&#x0D;&#x0A;   &#x0D;&#x0A;     &#x0D;&#x0A;    &#x0D;&#x0A;   RETURN&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.addOverrideField.v5" value="t24.template.system.Table.addOverrideField.v5&lt;&lt;NR&gt;&gt;Table.addOverrideField&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;Rating&gt;-10&lt;/Rating&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addOverrideField &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; * &lt;doc&gt; &#x0D;&#x0A;* Adds an override field to the application&#x0D;&#x0A; * @author tcoleman@temenos.com &#x0D;&#x0A;* @public Application Development &#x0D;&#x0A;* @component Contract &#x0D;&#x0A;* &lt;/doc&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; $INSERT I_COMMON &#x0D;&#x0A;$INSERT I_EQUATE &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;  &#x0D;&#x0A;   GOSUB setFieldType&#x0D;&#x0A;          &#x0D;&#x0A;   CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;     &#x0D;&#x0A;   RETURN&#x0D;&#x0A;  &#x0D;&#x0A; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; setFieldType: &#x0D;&#x0A;   fieldName = &quot;XX.OVERRIDE&quot;&#x0D;&#x0A;    nArrayItem = &quot;35&quot; &#x0D;&#x0A;   tArrayItem = &quot;&quot; &#x0D;&#x0A;   tArrayItem&lt;3&gt; = &apos;NOINPUT&apos;&#x0D;&#x0A;    neighbour = &quot;&quot; &#x0D;&#x0A;   &#x0D;&#x0A;   RETURN&#x0D;&#x0A;"/>
<Property key="t24.remote.server.second.browse.operation" value=""/>
<Property key="t24.template.system.Table.addLocalReferenceField.v5" value="t24.template.system.Table.addLocalReferenceField.v5&lt;&lt;NR&gt;&gt;Table.addLocalReferenceField&lt;&lt;NR&gt;&gt;*----------------------------------------------------------------------------- &#x0D;&#x0A;* &lt;Rating&gt;-10&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addLocalReferenceField(neighbour) &#x0D;&#x0A;* &lt;doc&gt; &#x0D;&#x0A;* Adds a local reference field to the application&#x0D;&#x0A; * @param neighbour  Reserved for future use. &#x0D;&#x0A;* @author tcoleman@temenos.com &#x0D;&#x0A;* @public Application Development &#x0D;&#x0A;* @component Contract &#x0D;&#x0A;* &lt;/doc&gt; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; $INSERT I_COMMON &#x0D;&#x0A;$INSERT I_EQUATE &#x0D;&#x0A;$INSERT I_DataTypes &#x0D;&#x0A;$INSERT I_Table &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;  &#x0D;&#x0A;   GOSUB setFieldType&#x0D;&#x0A; &#x0D;&#x0A;   CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;    IF checkFileItem THEN &#x0D;&#x0A;      CALL Field.setCheckFile(checkFileItem)&#x0D;&#x0A;    END &#x0D;&#x0A;   RETURN &#x0D;&#x0A; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; setFieldType: &#x0D;&#x0A;   fieldName = &quot;XX.LOCAL.REF&quot;&#x0D;&#x0A;    nArrayItem = &quot;35&quot; &#x0D;&#x0A;   tArrayItem = &quot;A&quot; &#x0D;&#x0A;   checkFileItem = &apos;&apos; &#x0D;&#x0A;   neighbour = &quot;&quot; &#x0D;&#x0A;   RETURN &#x0D;&#x0A;"/>
<Property key="t24.method.template" value="&lt;&lt;MTH&gt;&gt;&#x0D;&#x0A;*&lt;doc&gt;&lt;&lt;MTH_DESC&gt;&gt;&#x0D;&#x0A;*@public&#x0D;&#x0A;&lt;&lt;MTH_PARAM&gt;&gt;&lt;&lt;MTH_RETURN&gt;&gt;&#x0D;&#x0A;&lt;&lt;MTH_LINK&gt;&gt;&#x0D;&#x0A;&lt;&lt;MTH_PACKAGE&gt;&gt;&#x0D;&#x0A;&lt;&lt;MTH_AUTHOR&gt;&gt;&#x0D;&#x0A;*&lt;/doc&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Modifications&gt;&#x0D;&#x0A;***&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;*&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;region name= Inserts&gt;&#x0D;&#x0A;***&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;&lt;&lt;MTH_INSERT&gt;&gt;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;!** TODO&#x0D;&#x0A;    &#x0D;&#x0A;    RETURN &lt;&lt;MTH_FINAL_RETURN&gt;&gt;&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.addOptionsField.v5" value="t24.template.system.Table.addOptionsField.v5&lt;&lt;NR&gt;&gt;Table.addOptionsField&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;  &lt;Rating&gt;-10&lt;/Rating&gt; &#x0D;&#x0A;-----------------------------------------------------------------------------&#x0D;&#x0A;   SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.addOptionsField(fieldName, options, args, neighbour) &#x0D;&#x0A; &lt;doc&gt; &#x0D;&#x0A; Adds a field with a pre-defined list of options&#x0D;&#x0A; @param fieldName The name of the field to add.  Same as Table.addField&#x0D;&#x0A; @param options    The list of valid options, delimited by _ &#x0D;&#x0A;@param args    Any arguments to be used. Same as Table.addField &#x0D;&#x0A;@param neighbour Reserved for future use &#x0D;&#x0A;* @author tcoleman@temenos.com &#x0D;&#x0A;@public Application Development &#x0D;&#x0A; @component Contract &#x0D;&#x0A; &lt;/doc&gt; &#x0D;&#x0A;-----------------------------------------------------------------------------&#x0D;&#x0A;INSERT I_COMMON &#x0D;&#x0A;$INSERT I_EQUATE &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; &#x0D;&#x0A;   GOSUB setFieldType&#x0D;&#x0A;    CALL Table.processArgs(args, nArrayItem, tArrayItem)&#x0D;&#x0A;    CALL Table.addFieldDefinition(fieldName, nArrayItem, tArrayItem,neighbour)&#x0D;&#x0A;  &#x0D;&#x0A;   RETURN&#x0D;&#x0A; &#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A; setFieldType: &#x0D;&#x0A;   nArrayItem = &quot;35&quot;&#x0D;&#x0A;    tArrayItem = &quot;&quot; &#x0D;&#x0A;   tArrayItem&lt;2&gt; = options&#x0D;&#x0A;    RETURN &#x0D;&#x0A;"/>
<Property key="t24.template.system.TEMPLATE.ID.v5" value="t24.template.system.TEMPLATE.ID.v5&lt;&lt;NR&gt;&gt;TEMPLATE.ID&lt;&lt;NR&gt;&gt;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.ID&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;!** FIELD definitions FOR &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;&#x0D;&#x0A;*!&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype id&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;* @uses E&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* TODO Add logic to validate the id&#x0D;&#x0A;* TODO Create an EB.ERROR record if you are creating a new error code&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      E = &apos;EB-NOT.VALID.ID&apos;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.template.system.TableUtil.loadFieldTypes.v5" value="t24.template.system.TableUtil.loadFieldTypes.v5&lt;&lt;NR&gt;&gt;TableUtil.loadFieldTypes&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-64&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.Util.loadFieldTypes&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;* --------------------&#x0D;&#x0A;*  EN_10003543&#x0D;&#x0A;*  Creation.&#x0D;&#x0A;*&#x0D;&#x0A;* 13/11/07 - BG_100015805&#x0D;&#x0A;*            Incorrect customer and account field lengths&#x0D;&#x0A;*&#x0D;&#x0A;* 24/01/08 - BG_100016792&#x0D;&#x0A;*            New data type T24.TEXT.WIDE introduced&#x0D;&#x0A;*&#x0D;&#x0A;* 27/08/08 - EN_10003800 (SAR-2008-07-31-0002)&#x0D;&#x0A;*            New data type T24.INTERNAL.ACCOUNT added&#x0D;&#x0A;*&#x0D;&#x0A;* 19/09/08 - BG_100020031&#x0D;&#x0A;*            Change the datatype for T24.ACCOUNT&#x0D;&#x0A;*            REF:TTS0803495&#x0D;&#x0A;*&#x0D;&#x0A;*----------------------------------------------------------------------------&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;    $INSERT I_DataTypes&#x0D;&#x0A;    $INSERT I_F.EB.OBJECT&#x0D;&#x0A;&#x0D;&#x0A;    IF NOT(DataType.list) THEN&#x0D;&#x0A;        GOSUB init&#x0D;&#x0A;        GOSUB loadFieldTypes&#x0D;&#x0A;    END&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;init:&#x0D;&#x0A;    DataType.list = &apos;&apos;&#x0D;&#x0A;    DataType.nArrays = &apos;&apos;&#x0D;&#x0A;    DataType.tArrays = &apos;&apos;&#x0D;&#x0A;    DataType.checkFiles = &apos;&apos;&#x0D;&#x0A;    typePos = 0&#x0D;&#x0A;&#x0D;&#x0A;    GOSUB loadBasicTypes&#x0D;&#x0A;&#x0D;&#x0A;    FN.EB.OBJECT = &apos;F.EB.OBJECT&apos;&#x0D;&#x0A;    F.EB.OBJECT = &apos;&apos;&#x0D;&#x0A;    CALL OPF(FN.EB.OBJECT,F.EB.OBJECT)&#x0D;&#x0A;&#x0D;&#x0A;    SELECT.STATEMENT = &apos;SELECT &apos;:FN.EB.OBJECT&#x0D;&#x0A;    EB.OBJECT.LIST = &apos;&apos;&#x0D;&#x0A;&#x0D;&#x0A;    CALL EB.READLIST(SELECT.STATEMENT,EB.OBJECT.LIST,&apos;&apos;,&apos;&apos;,&apos;&apos;)        ;* TODO replace with DAS&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;loadFieldTypes:&#x0D;&#x0A;&#x0D;&#x0A;    LOOP&#x0D;&#x0A;        REMOVE EB.OBJECT.ID FROM EB.OBJECT.LIST SETTING EB.OBJECT.MARK&#x0D;&#x0A;    WHILE EB.OBJECT.ID : EB.OBJECT.MARK&#x0D;&#x0A;        CALL CACHE.READ(&apos;F.EB.OBJECT&apos;,EB.OBJECT.ID,R.EB.OBJECT,YERR)&#x0D;&#x0A;        GOSUB addType&#x0D;&#x0A;    REPEAT&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;loadBasicTypes:&#x0D;&#x0A;*&#x0D;&#x0A;* Load the basic types that we always want to be available&#x0D;&#x0A;*  T24_String TO &apos;T24.STRING&apos;&#x0D;&#x0A;*  T24_BigString TO &apos;T24.BIG.STRING&apos;&#x0D;&#x0A;*  T24_Text TO &apos;T24.TEXT&apos;&#x0D;&#x0A;*  T24_TextWide TO &apos;T24.TEXT.WIDE&apos;&#x0D;&#x0A;*  T24_Numeric TO &apos;T24.NUMERIC&apos;&#x0D;&#x0A;*  T24_Date TO &apos;T24.DATE&apos;&#x0D;&#x0A;*  T24_Portfolio TO &apos;T24.PORTFOLIO&apos;&#x0D;&#x0A;*  T24_Account TO &apos;T24.ACCOUNT&apos;&#x0D;&#x0A;*  T24_Customer TO &apos;T24.CUSTOMER&apos;&#x0D;&#x0A;*&#x0D;&#x0A;    id = &quot;T24.STRING&quot;&#x0D;&#x0A;    length = 35&#x0D;&#x0A;    type = &quot;A&quot;&#x0D;&#x0A;    file = &apos;&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.BIG.STRING&quot;&#x0D;&#x0A;    length = 50&#x0D;&#x0A;    type = &quot;A&quot;&#x0D;&#x0A;    file = &apos;&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.TEXT&quot;&#x0D;&#x0A;    length = 35&#x0D;&#x0A;    type = &quot;A&quot;&#x0D;&#x0A;    type&lt;7&gt; = &quot;TEXT&quot;&#x0D;&#x0A;    file = &apos;&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.TEXT.WIDE&quot;&#x0D;&#x0A;    length = 80&#x0D;&#x0A;    type = &quot;A&quot;&#x0D;&#x0A;    type&lt;7&gt; = &quot;TEXT&quot;&#x0D;&#x0A;    file = &apos;&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.NUMERIC&quot;&#x0D;&#x0A;    length = 35&#x0D;&#x0A;    type = &quot;&quot;&#x0D;&#x0A;    file = &apos;&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.DATE&quot;&#x0D;&#x0A;    length = 11&#x0D;&#x0A;    type = &quot;D&quot;&#x0D;&#x0A;    file = &apos;&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.PORTFOLIO&quot;&#x0D;&#x0A;    length = 35&#x0D;&#x0A;    type = &quot;SAM&quot;&#x0D;&#x0A;    file = &apos;&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.ACCOUNT&quot;&#x0D;&#x0A;    length = 19&#x0D;&#x0A;    type = &quot;ANT&quot;    ;*change the datatype from ACC to ANT&#x0D;&#x0A;    file = &apos;ACCOUNT&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.INTERNAL.ACCOUNT&quot;&#x0D;&#x0A;    length = 35&#x0D;&#x0A;    type = &quot;ANT&quot;&#x0D;&#x0A;    file = &apos;ACCOUNT&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.CUSTOMER&quot;&#x0D;&#x0A;    length = 10&#x0D;&#x0A;    type = &quot;CUS&quot;&#x0D;&#x0A;    file = &apos;CUSTOMER&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;    id = &quot;T24.FREQUENCY&quot;&#x0D;&#x0A;    length = 16&#x0D;&#x0A;    type = &quot;FQU&quot;&#x0D;&#x0A;    file = &apos;&apos;&#x0D;&#x0A;    GOSUB addBasicType&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*&#x0D;&#x0A;addBasicType:&#x0D;&#x0A;    typePos +=1&#x0D;&#x0A;    DataType.list&lt;typePos&gt; = id&#x0D;&#x0A;    DataType.nArrays&lt;typePos&gt; = length&#x0D;&#x0A;    DataType.tArrays&lt;typePos&gt; = LOWER(type)&#x0D;&#x0A;    DataType.checkFiles&lt;typePos&gt; = file&#x0D;&#x0A;    RETURN&#x0D;&#x0A;&#x0D;&#x0A;*&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*&#x0D;&#x0A;addType:&#x0D;&#x0A;    typePos +=1&#x0D;&#x0A;    DataType.list&lt;typePos&gt; = EB.OBJECT.ID&#x0D;&#x0A;    DataType.nArrays&lt;typePos&gt; = R.EB.OBJECT&lt;EB.OBJ.MAX.LENGTH&gt;&#x0D;&#x0A;    DataType.tArrays&lt;typePos&gt; = LOWER(R.EB.OBJECT&lt;EB.OBJ.VAL.ROUTINE&gt;[4,99])    ;* Ignore the IN2 part...&#x0D;&#x0A;    DataType.checkFiles&lt;typePos&gt; = R.EB.OBJECT&lt;EB.OBJ.CHECKFILE&gt;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.template.system.TEMPLATE.PROCESS.v5" value="t24.template.system.TEMPLATE.PROCESS.v5&lt;&lt;NR&gt;&gt;TEMPLATE.PROCESS&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-22&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.PROCESS&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;!** Simple PROCESS template&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype subroutine&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;*!&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= PROGRAM DESCRIPTION&gt;&#x0D;&#x0A;*** &lt;desc&gt;Program description&lt;/desc&gt;&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;* Program Description&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= MODIFICATION HISTORY&gt;&#x0D;&#x0A;*** &lt;desc&gt;Modification History&lt;/desc&gt;&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;* Modification History :&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= INSERTS&gt;&#x0D;&#x0A;*** &lt;desc&gt;Inserts&lt;/desc&gt;&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= MAIN PROCESS LOGIC&gt;&#x0D;&#x0A;*** &lt;desc&gt;Main process logic&lt;/desc&gt;&#x0D;&#x0A;&#x0D;&#x0A;      GOSUB INITIALISE&#x0D;&#x0A;      GOSUB PROCESS&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= PROCESS&gt;&#x0D;&#x0A;*** &lt;desc&gt;Process&lt;/desc&gt;&#x0D;&#x0A;PROCESS:&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= INITIALISE&gt;&#x0D;&#x0A;*** &lt;desc&gt;Initialise&lt;/desc&gt;&#x0D;&#x0A;INITIALISE:&#x0D;&#x0A;&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
<Property key="t24.template.system.TEMPLATE.FUNCTION.v5" value="t24.template.system.TEMPLATE.FUNCTION.v5&lt;&lt;NR&gt;&gt;TEMPLATE.FUNCTION&lt;&lt;NR&gt;&gt;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-22&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.FUNCTION&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;!** Simple FUNCTION template&#x0D;&#x0A;* @author youremail@temenos.com&#x0D;&#x0A;* @stereotype subroutine&#x0D;&#x0A;* @package infra.eb&#x0D;&#x0A;*!&#x0D;&#x0A;*** &lt;region name= PROGRAM DESCRPTION&gt;&#x0D;&#x0A;*** &lt;desc&gt;Program description&lt;/desc&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Program Description&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= MODIFICATION HISTORY&gt;&#x0D;&#x0A;*** &lt;desc&gt;Modification History&lt;/desc&gt;&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= INSERTS&gt;&#x0D;&#x0A;*** &lt;desc&gt;Inserts&lt;/desc&gt;&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= MAIN PROCESS LOGIC&gt;&#x0D;&#x0A;*** &lt;desc&gt;Main process logic&lt;/desc&gt;&#x0D;&#x0A;      GOSUB INITIALISE&#x0D;&#x0A;      GOSUB PROCESS&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= PROCESS&gt;&#x0D;&#x0A;*** &lt;desc&gt;process&lt;/desc&gt;&#x0D;&#x0A;PROCESS:&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;&#x0D;&#x0A;*** &lt;region name= INITIALISE&gt;&#x0D;&#x0A;*** &lt;desc&gt;initialise&lt;/desc&gt;&#x0D;&#x0A;INITIALISE:&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;*** &lt;/region&gt;&#x0D;&#x0A;END&#x0D;&#x0A;"/>
<Property key="t24.template.system.Table.setAuditPosition.v5" value="t24.template.system.Table.setAuditPosition.v5&lt;&lt;NR&gt;&gt;Table.setAuditPosition&lt;&lt;NR&gt;&gt; *-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;-14&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;    SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.&lt;&lt;TEMPLATE_NAME&gt;&gt;.setAuditPosition&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;doc&gt;&#x0D;&#x0A;* Sets the position of the audit fields when defining the field definitions for a table.&#x0D;&#x0A;* @author tcoleman@temenos.com&#x0D;&#x0A;* @public Application Development&#x0D;&#x0A;* @component Contract&#x0D;&#x0A;* @use V&#x0D;&#x0A;* @link     Table&#x0D;&#x0A;* @link  MATRIX.UPDATE&#x0D;&#x0A;* @stereotype subroutine&#x0D;&#x0A;* &lt;/doc&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Modification History:&#x0D;&#x0A;* --------------------&#x0D;&#x0A;*&#x0D;&#x0A;*  27/08/08 - EN_10003800 (SAR-2008-07-31-0002)&#x0D;&#x0A;*             For live templates offset set to 0&#x0D;&#x0A;*&#x0D;&#x0A;*----------------------------------------------------------------------------&#x0D;&#x0A;    $INSERT I_COMMON&#x0D;&#x0A;    $INSERT I_EQUATE&#x0D;&#x0A;    $INSERT I_Table&#x0D;&#x0A;&#x0D;&#x0A;    offSet = 9      ;* Set this by the type of the table....&#x0D;&#x0A;    IF Table.stereotype = &apos;L&apos; THEN&#x0D;&#x0A;        offset = 0&#x0D;&#x0A;    END&#x0D;&#x0A;    IF NOT(Table.currentFieldPosition) THEN&#x0D;&#x0A;        GOSUB findCurrentPosition&#x0D;&#x0A;    END&#x0D;&#x0A;    V = Table.currentFieldPosition + offSet&#x0D;&#x0A;    CALL ADD.COMMON.FIELDS&#x0D;&#x0A;    Table.auditFieldsAdded  = 1         ;* So that MATRIX.UPDATE doesn&apos;t do it twice&#x0D;&#x0A;    Table.currentFieldPosition = Table.currentFieldPosition + offSet  ;* So the next field is after the audit fields...&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;findCurrentPosition:&#x0D;&#x0A;* Loop through the F array until it is blank to find the last position&#x0D;&#x0A;    Table.currentFieldPosition = 1&#x0D;&#x0A;    LOOP&#x0D;&#x0A;&#x0D;&#x0A;    UNTIL F(Table.currentFieldPosition) = &apos;&apos;&#x0D;&#x0A;        Table.currentFieldPosition +=1&#x0D;&#x0A;    REPEAT&#x0D;&#x0A;&#x0D;&#x0A;    RETURN&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;"/>
<Property key="t24.template.system.XX.EOD.LOAD.v5" value="t24.template.system.XX.EOD.LOAD.v5&lt;&lt;NR&gt;&gt;XX.EOD.LOAD&lt;&lt;NR&gt;&gt;* Version 1 13/04/00  GLOBUS Release No. 200508 30/06/05&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* &lt;Rating&gt;0&lt;/Rating&gt;&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;      SUBROUTINE &lt;&lt;PREFIX&gt;&gt;.EOD.LOAD&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Load routine to setup the common area for the multi-threaded Close of Business&#x0D;&#x0A;* job &lt;&lt;PREFIX&gt;&gt;.EOD&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;$INSERT I_COMMON&#x0D;&#x0A;$INSERT I_EQUATE&#x0D;&#x0A;$INSERT I_&lt;&lt;PREFIX&gt;&gt;.EOD.COMMON&#x0D;&#x0A;*-----------------------------------------------------------------------------&#x0D;&#x0A;* Open files to be used in the XX.EOD routine as well as standard variables.&#x0D;&#x0A;&#x0D;&#x0A;      FN.EOD.FILE = &apos;F.EOD.FILE&apos;&#x0D;&#x0A;      F.EOD.FILE = &apos;&apos;&#x0D;&#x0A;      CALL OPF(FN.EOD.FILE,F.EOD.FILE)&#x0D;&#x0A;&#x0D;&#x0A;      R.EOD.FILE = &apos;&apos;&#x0D;&#x0A;      YERR = &apos;&apos;&#x0D;&#x0A;      CALL F.READ(FN.EOD.FILE,&apos;SYSTEM&apos;,R.EOD.FILE,F.EOD.FILE,YERR)&#x0D;&#x0A;&#x0D;&#x0A;      RETURN&#x0D;&#x0A;   END&#x0D;&#x0A;"/>
</Properties>